{"version":3,"sources":["img/logo.jpeg","img/landing.jpeg","components/layout/spinner.gif","img/img_1.png","img/img_2.png","actions/types.js","actions/alert.js","utils/setAuthToken.js","actions/auth.js","components/layout/Navbar.js","components/layout/Landing.js","components/auth/Register.js","components/auth/Login.js","components/auth/Needer.js","components/layout/Alert.js","components/layout/Footer.js","components/layout/Home.js","components/Information/HowToDonate.js","components/Information/HowToGet.js","components/Information/TermsAndConditions.js","components/routing/PrivateRoute.js","reducers/alert.js","reducers/auth.js","reducers/profile.js","reducers/admin.js","reducers/post.js","reducers/index.js","store.js","actions/post.js","actions/profile.js","components/create-profile/CreateProfile.js","components/layout/Spinner.js","components/profile/ProfileAbout.js","components/profile/Profile.js","components/profile/MyProfile.js","components/create-profile/EditProfile.js","components/admin/Admin.js","components/admin/customer/CustomerItem.js","components/admin/customer/Customers.js","actions/admin.js","components/admin/customer/CustomerAbout.js","components/admin/customer/Customer.js","components/admin/user/UserItem.js","components/admin/user/Users.js","components/admin/user/UserAbout.js","components/admin/user/User.js","components/post/AddPost.js","components/post/PostAbout.js","components/post/comments/CommentItem.js","components/post/comments/CommentForm.js","components/post/Post.js","components/post/PostItem.js","components/post/Posts.js","components/donar/Donars.js","components/post/MyPost.js","components/donar/DonarAbout.js","components/donar/Donar.js","components/Information/AboutUs.js","components/layout/DonorDashBoard.js","components/post/AddApplication.js","components/post/NoApplication.js","App.js","index.js"],"names":["module","exports","PROFILE_ERROR","setAlert","msg","alertType","timeout","dispatch","id","uuid","v4","type","payload","setTimeout","setAuthToken","token","axios","defaults","headers","common","loadUser","a","localStorage","get","res","data","loadNeeder","connect","state","auth","logout","isAuthenticated","loading","needer","user","authLinks","className","src","logo","style","width","height","marginTop","display","border","alt","rounded","to","onClick","href","guestLinks","Image","img","margin","class","Card","backgroundColor","Body","Title","textAlign","fontSize","color","register","name","phone","email","profession","bloodGroup","facebook","area","thana","password","history","config","body","JSON","stringify","post","errors","response","forEach","error","useState","password2","formData","setFormData","onChange","e","target","value","onSubmit","preventDefault","placeholder","login","formDate","required","minLength","neederLogin","alerts","alert","length","map","key","Footer","props","Home","Jumbotron","HowToDonate","Text","HowToGet","TermsAndConditions","Component","component","rest","render","initialState","getItem","users","profile","profiles","customer","adminUser","customers","adminUsers","posts","combineReducers","action","filter","setItem","removeItem","admin","_id","likes","comments","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","getPostById","statusText","status","getMyPosts","addLike","put","createProfile","edit","push","getCurrentProfileById","userId","getMyProfile","withRouter","donateDate","bio","can","useEffect","spinner","ProfileAbout","rel","match","params","Spinner","permission","profileData","CustomerItem","getCustomers","CustomerAbout","approveCustomer","customerId","rejectCustomer","getCustomerById","onApprove","onReject","UserItem","getUsers","UserAbout","getUserById","addPost","text","clinicName","cols","rows","PostAbout","date","showActions","format","defaultProps","comment","donar","addComment","postId","setComment","PostItem","getPosts","getMyDonars","DonarAbout","getDonarById","profileId","AboutUs","getPostsByBlood","addApplication","NoApplication","App","exact","path","Terms","Post","Posts","Register","Login","Needer","AddApplication","Admin","Customers","Customer","Users","User","Donars","CreateProfile","EditProfile","MyProfile","DonorDashBoard","Profile","Donar","MyPost","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.85e4799e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.08842fd4.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/landing.b1d24e47.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/spinner.6f09789b.gif\";","module.exports = __webpack_public_path__ + \"static/media/img_1.ed5f337a.png\";","module.exports = __webpack_public_path__ + \"static/media/img_2.9cc17e69.png\";","export const SET_ALERT = 'SET_ALERT';\nexport const REMOVE_ALERT = 'REMOVE_ALERT';\nexport const REGISTER_SUCCESS = 'REGISTER_SUCCESS';\nexport const REGISTER_FAIL = 'REGISTER_FAIL';\nexport const USER_LOADED = 'USER_LOADED';\nexport const NEEDER_LOADED = 'NEEDER_LOADED';\nexport const AUTH_ERROR = 'AUTH_ERROR';\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\nexport const LOGOUT = '';\nexport const CLEAR_PROFILE = 'CLEAR_PROFILE';\nexport const CLEAR_POST = 'CLEAR_POST';\nexport const PROFILE_ERROR = 'PROFILE_ERROR';\nexport const POST_ERROR = 'POST_ERROR';\nexport const GET_PROFILE = 'GET_PROFILE';\nexport const GET_PROFILES = 'GET_PROFILES';\nexport const UPDATE_PROFILE = 'UPDATE_PROFILE';\nexport const GET_CUSTOMER = 'GET_CUSTOMER';\nexport const GET_CUSTOMERS = 'GET_CUSTOMERS';\nexport const GET_USER = 'GET_USER';\nexport const GET_USERS = 'GET_USERS';\nexport const GET_POST = 'GET_POST';\nexport const GET_POSTS = 'GET_POSTS';\nexport const ADD_POST = 'ADD_POST';\nexport const ADD_COMMENT = 'ADD_COMMENT';\nexport const UPDATE_LIKES = 'UPDATE_LIKES';\n","import uuid from 'uuid';\nimport { SET_ALERT, REMOVE_ALERT } from './types';\n\nexport const setAlert = (msg, alertType, timeout = 5000) => dispatch => {\n  const id = uuid.v4();\n  dispatch({\n    type: SET_ALERT,\n    payload: { msg, alertType, id }\n  });\n\n  setTimeout(() => dispatch({ type: REMOVE_ALERT, payload: id }), timeout);\n};\n","import axios from 'axios';\n\nconst setAuthToken = token => {\n  if (token) {\n    axios.defaults.headers.common['x-auth-token'] = token;\n  } else {\n    delete axios.defaults.headers.common['x-auth-token'];\n  }\n};\n\nexport default setAuthToken;\n","import axios from 'axios';\nimport { setAlert } from './alert';\nimport setAuthToken from '../utils/setAuthToken';\nimport {\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  USER_LOADED,\n  AUTH_ERROR,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT,\n  CLEAR_PROFILE,\n  CLEAR_POST,\n  NEEDER_LOADED\n} from './types';\n\nexport const loadUser = () => async dispatch => {\n  if (localStorage.token) {\n    setAuthToken(localStorage.token);\n  }\n  try {\n    const res = await axios.get('/api/auth');\n    dispatch({\n      type: USER_LOADED,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: AUTH_ERROR\n    });\n  }\n};\n\nexport const loadNeeder = () => async dispatch => {\n  if (localStorage.token) {\n    setAuthToken(localStorage.token);\n  }\n  try {\n    const res = await axios.get('/api/auth/needer');\n    dispatch({\n      type: NEEDER_LOADED,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: AUTH_ERROR\n    });\n  }\n};\n\nexport const register = ({\n  name,\n  phone,\n  email,\n  profession,\n  bloodGroup,\n  facebook,\n  area,\n  thana,\n  password,\n  history\n}) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n\n  const body = JSON.stringify({\n    name,\n    phone,\n    email,\n    profession,\n    bloodGroup,\n    facebook,\n    area,\n    thana,\n    password\n  });\n\n  try {\n    const res = await axios.post('/api/users', body, config);\n\n    dispatch({\n      type: REGISTER_SUCCESS,\n      payload: res.data\n    });\n    dispatch(loadUser());\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: REGISTER_FAIL\n    });\n  }\n};\n\nexport const login = (phone, password) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n\n  const body = JSON.stringify({ phone, password });\n\n  try {\n    const res = await axios.post('/api/auth', body, config);\n\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: res.data\n    });\n    dispatch(loadUser());\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: LOGIN_FAIL\n    });\n  }\n};\n\nexport const logout = () => dispatch => {\n  dispatch({\n    type: CLEAR_PROFILE\n  });\n  dispatch({\n    type: CLEAR_POST\n  });\n  dispatch({\n    type: LOGOUT\n  });\n};\n\nexport const neederLogin = (phone, password) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n\n  const body = JSON.stringify({ phone, password });\n\n  try {\n    const res = await axios.post('/api/auth/needer', body, config);\n\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: res.data\n    });\n    dispatch(loadNeeder());\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: LOGIN_FAIL\n    });\n  }\n};\n","import React, { Fragment } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { logout } from '../../actions/auth';\nimport logo from '../../img/logo.jpeg';\n\nconst Navbar = ({\n  auth: { isAuthenticated, loading, needer, user },\n  logout\n}) => {\n  const authLinks = (\n    <nav className='navbar bg-deep'>\n      <div>\n        <img\n          src={logo}\n          style={{\n            width: '40px',\n            height: '25px',\n            marginTop: '6px',\n            display: 'block',\n            border: '1px solid'\n          }}\n          alt=''\n          rounded\n        />\n        <p className='mid'>\n          <Link to='/posts'>Blood Source</Link>\n        </p>\n      </div>\n      <ul>\n        <li>\n          {needer && needer !== null && user === null ? (\n            <Link to='/posts/myPost'>Dashboard</Link>\n          ) : (\n            <Link to='/myDashBoard'>Dashboard</Link>\n          )}\n        </li>\n        <li>\n          {needer && needer !== null && user === null ? (\n            <Link to='/addApplication'>New</Link>\n          ) : (\n            <Link to='/profile/me'>My Profile</Link>\n          )}\n        </li>\n        <li>\n          <a onClick={logout} href=''>\n            <span className='hide-sm'>Logout</span>\n          </a>\n        </li>\n      </ul>\n    </nav>\n  );\n\n  const guestLinks = (\n    <nav className='navbar bg-deep'>\n      <div>\n        <img\n          src={logo}\n          style={{\n            width: '40px',\n            height: '25px',\n            marginTop: '6px',\n            display: 'block',\n            border: '1px solid'\n          }}\n          alt=''\n          rounded\n        />\n        <p className='mid'>\n          <Link to='/'>Blood Source</Link>\n        </p>\n      </div>\n      <ul>\n        <li>\n          <Link to='/posts'>Applications</Link>\n        </li>\n        <li>\n          <Link to='/needer'>Needer</Link>\n        </li>\n        <li>\n          <Link to='/login'>Donor</Link>\n        </li>\n      </ul>\n    </nav>\n  );\n\n  return (\n    <Fragment>\n      {!loading && (\n        <Fragment>{isAuthenticated ? authLinks : guestLinks}</Fragment>\n      )}\n    </Fragment>\n  );\n};\n\nNavbar.propTypes = {\n  logout: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, { logout })(Navbar);\n","import React, { Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport img from '../../img/landing.jpeg';\nimport { Image, Card } from 'react-bootstrap';\n\nconst Landing = ({ auth: { isAuthenticated } }) => {\n  return (\n    <div className=''>\n      <div>\n        <Image className='landing-image' src={img} />\n      </div>\n      <div className='badge-white' style={{ margin: '0px' }}>\n        <p className='welcome text-deep large'>\n          <i class='fas fa-smile'></i> We are proud to share blood\n        </p>\n      </div>\n      {!isAuthenticated && (\n        <Fragment>\n          <div className='landing-navs'>\n            <Card style={{ backgroundColor: '#2471a3' }}>\n              <Card.Body>\n                <Card.Title\n                  className='text-deep large'\n                  style={{\n                    textAlign: 'center',\n                    fontSize: '2em',\n                    color: 'white'\n                  }}\n                >\n                  <i class='fas fa-hand-holding-medical'></i> I Need Blood\n                </Card.Title>\n                <div className='landing-nav-buttons'>\n                  <Link to='/newApplication' className='btn-light'>\n                    New Application\n                  </Link>\n                  <Link to='/needer' className='btn-light'>\n                    Login\n                  </Link>\n                </div>\n              </Card.Body>\n            </Card>\n            <Card style={{ backgroundColor: '#fb0444' }}>\n              <Card.Body>\n                <Card.Title\n                  className='text-deep mid'\n                  style={{\n                    textAlign: 'center',\n                    fontSize: '2em',\n                    color: 'white'\n                  }}\n                >\n                  <i class='fas fa-user-nurse'></i> I Donate Blood\n                </Card.Title>\n                <div className='landing-nav-buttons'>\n                  <Link to='/register' className='btn-light'>\n                    Sign Up\n                  </Link>\n                  <Link to='/login' className='btn-light'>\n                    Login\n                  </Link>\n                </div>\n              </Card.Body>\n            </Card>\n          </div>\n        </Fragment>\n      )}\n    </div>\n  );\n};\n\nLanding.propTypes = {\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps)(Landing);\n","import React, { Fragment, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Link, Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport { setAlert } from '../../actions/alert';\nimport { register } from '../../actions/auth';\n\nconst Register = ({ setAlert, register, isAuthenticated, history }) => {\n  const [formData, setFormData] = useState({\n    name: '',\n    phone: '',\n    email: '',\n    password: '',\n    password2: '',\n    bloodGroup: '',\n    area: '',\n    thana: ''\n  });\n\n  const {\n    name,\n    phone,\n    email,\n    bloodGroup,\n    area,\n    thana,\n    password,\n    password2\n  } = formData;\n\n  const onChange = e =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const onSubmit = async e => {\n    e.preventDefault();\n    if (password !== password2) {\n      setAlert('Passwords do not match', 'danger');\n    } else {\n      register({\n        name,\n        phone,\n        email,\n        bloodGroup,\n        area,\n        thana,\n        password,\n        history\n      });\n    }\n  };\n\n  if (isAuthenticated) {\n    return <Redirect to='/profile/me' />;\n  }\n\n  return (\n    <Fragment>\n      <div className='container'>\n        <h1 className='large text-red'>\n          Sign Up For Donor <i class='fas fa-user-nurse'></i>{' '}\n        </h1>\n        <p className='lead'>\n          <i className='fas fa-user'></i> আমাদের সম্মানিত সদস্য হতে এখনি একাউন্ট\n          খুলুন\n        </p>\n        <p className='lead'>'*’ = অত্যাবশ্যকীয়</p>\n        <form className='form' onSubmit={e => onSubmit(e)}>\n          <div className='form-group'>\n            <input\n              type='text'\n              placeholder='* নাম'\n              name='name'\n              value={name}\n              onChange={e => onChange(e)}\n            />\n          </div>\n          <div className='form-group'>\n            <input\n              type='number'\n              placeholder='* মোবাইল নাম্বার'\n              name='phone'\n              value={phone}\n              onChange={e => onChange(e)}\n            />\n            <small className='form-text'>এটা আপনার Id হিসেবে ব্যবহৃত হবে</small>\n          </div>\n          <div className='form-group'>\n            <input\n              type='email'\n              placeholder='email@gmail.com'\n              name='email'\n              value={email}\n              onChange={e => onChange(e)}\n            />\n            <small className='form-text'>\n              আপনি পাসওয়ার্ড ভুলে গেলে ইমেইল ব্যবহার করে পুরনরায় পাসওয়ার্ড তৈরি\n              করতে পারবেন\n            </small>\n          </div>\n          <div className='form-group'>\n            <select\n              name='bloodGroup'\n              value={bloodGroup}\n              onChange={e => onChange(e)}\n            >\n              <option value='0'>* রক্তের গ্রুপ বাছাই করুন</option>\n              <option value='A+'>A+</option>\n              <option value='A-'>A-</option>\n              <option value='B+'>B+</option>\n              <option value='B-'>B-</option>\n              <option value='O+'>O+</option>\n              <option value='O-'>O-</option>\n              <option value='AB+'>AB+</option>\n              <option value='AB-'>AB-</option>\n            </select>\n            <small className='form-text'>Please select correctly</small>\n          </div>\n\n          <div className='form-group'>\n            <input\n              type='password'\n              placeholder='* পাসওয়ার্ড'\n              name='password'\n              value={password}\n              onChange={e => onChange(e)}\n            />\n            <small className='form-text'>\n              কমপক্ষে ৬ টি অক্ষর/ সংখ্যা/সাংকেতিক চিহ্ন থাকবে\n            </small>\n          </div>\n          <div className='form-group'>\n            <input\n              type='password'\n              placeholder='* কনফার্ম পাসওয়ার্ড'\n              name='password2'\n              value={password2}\n              onChange={e => onChange(e)}\n            />\n          </div>\n          <div>\n            <h3>Your Address</h3>\n            <div className='form-group'>\n              <input\n                type='text'\n                placeholder='* আপনার বর্তমান ঠিকানা'\n                name='area'\n                value={area}\n                onChange={e => onChange(e)}\n              />\n              <small className='form-text'>\n                যেমনঃ বাড়ি-১০, রোড-১২, ব্লক-৮ ইত্যাদি\n              </small>\n            </div>\n            <div className='form-group'>\n              <select name='thana' value={thana} onChange={e => onChange(e)}>\n                <option value='0'>* থানা</option>\n                <option value='Adabar'>Adabar</option>\n                <option value='Azampur'>Azampur</option>\n                <option value='Badda'>Badda</option>\n                <option value='Bangsal'>Bangsal</option>\n                <option value='Bimanbandar'>Bimanbandar</option>\n                <option value='Cantonment'>Cantonment</option>\n                <option value='Chowkbazar'>Chowkbazar</option>\n                <option value='Darus Salam'>Darus Salam</option>\n                <option value='Demra'>Demra</option>\n                <option value='Dhanmondi'>Dhanmondi</option>\n                <option value='Gendaria'>Gendaria</option>\n                <option value='Gulshan'>Gulshan</option>\n                <option value='Hazaribagh'>Hazaribagh</option>\n                <option value='Kadamtali'>Kadamtali</option>\n                <option value='Kafrul'>Kafrul</option>\n                <option value='Kalabagan'>Kalabagan</option>\n                <option value='Kamrangirchar'>Kamrangirchar</option>\n                <option value='Khilgaon'>Khilgaon</option>\n                <option value='Khilkhet'>Khilkhet</option>\n                <option value='Kotwali'>Kotwali</option>\n                <option value='Lalbagh'>Lalbagh</option>\n                <option value='Mirpur Model'>Mirpur Model</option>\n                <option value='Mohammadpur'>Mohammadpur</option>\n                <option value='Motijheel'>Motijheel</option>\n                <option value='New Market'>New Market</option>\n                <option value='Pallabi'>Pallabi</option>\n                <option value='Paltan'>Paltan</option>\n                <option value='Panthapath'>Panthapath</option>\n                <option value='Ramna'>Ramna</option>\n                <option value='Rampura'>Rampura</option>\n                <option value='Sabujbagh'>Sabujbagh</option>\n                <option value='Shah Ali'>Shah Ali</option>\n                <option value='Shahbag'>Shahbag</option>\n                <option value='Sher-e-Bangla Nagar'>Sher-e-Bangla Nagar</option>\n                <option value='Shyampur'>Shyampur</option>\n                <option value='Sutrapur'>Sutrapur</option>\n                <option value='Tejgaon Industrial Area'>\n                  Tejgaon Industrial Area\n                </option>\n                <option value='Tejgaon'>Tejgaon</option>\n                <option value='Turag'>Turag</option>\n                <option value='Uttar Khan'>Uttar Khan</option>\n                <option value='Uttara'>Uttara</option>\n                <option value='Vatara'>Vatara</option>\n                <option value='Wari'>Wari</option>\n              </select>\n              <small className='form-text'>Please select correctly</small>\n            </div>\n            <div>\n              <small className='form-text'>\n                By clicking Register, you agree to our{' '}\n                <Link to='/termsandconditions'>Terms</Link>,{' '}\n                <Link to='/termsandconditions'>Data Policy</Link> and\n                <Link to='/termsandconditions'> Cookie</Link> Policy. You may\n                receive SMS notifications from us and can opt out at any time.\n              </small>\n            </div>\n          </div>\n          <input type='submit' className='btn btn-danger' value='Register' />\n        </form>\n        <p className='my-1'>\n          Already have an account?{' '}\n          <Link to='/login' className='text-red'>\n            Sign In\n          </Link>\n        </p>\n      </div>\n    </Fragment>\n  );\n};\n\nRegister.propTypes = {\n  setAlert: PropTypes.func.isRequired,\n  register: PropTypes.func.isRequired,\n  isAuthenticated: PropTypes.bool\n};\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated\n});\n\nexport default connect(mapStateToProps, { setAlert, register })(Register);\n","import React, { Fragment, useState } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { login } from '../../actions/auth';\n\nconst Login = ({ login, isAuthenticated }) => {\n  const [formDate, setFormData] = useState({\n    phone: '',\n    password: ''\n  });\n\n  const { phone, password } = formDate;\n\n  const onChange = e =>\n    setFormData({ ...formDate, [e.target.name]: e.target.value });\n\n  const onSubmit = async e => {\n    e.preventDefault();\n    login(phone, password);\n  };\n\n  //Redirect\n  if (isAuthenticated) {\n    return <Redirect to='/profile/me' />;\n  }\n\n  return (\n    <Fragment>\n      <div className='container'>\n        <h1 className='large text-red'>\n          Log In As Donor <i class='fas fa-user-nurse'></i>{' '}\n        </h1>\n        <p className='lead'>\n          <i className='fas fa-user'></i> Log Into Your Account\n        </p>\n        <form className='form' onSubmit={e => onSubmit(e)}>\n          <div className='form-group'>\n            <input\n              type='number'\n              placeholder='Mobile Number'\n              name='phone'\n              value={phone}\n              onChange={e => onChange(e)}\n              required\n            />\n          </div>\n          <div className='form-group'>\n            <input\n              type='password'\n              placeholder='Password'\n              name='password'\n              minLength='6'\n              value={password}\n              onChange={e => onChange(e)}\n              required\n            />\n          </div>\n          <input type='submit' className='btn btn-danger' value='Login' />\n        </form>\n        <p className='my-1'>\n          Don't have an account?{' '}\n          <Link to='/register' className='text-red'>\n            Sign Up\n          </Link>\n        </p>\n      </div>\n    </Fragment>\n  );\n};\n\nLogin.propTypes = {\n  login: PropTypes.func.isRequired,\n  isAuthenticated: PropTypes.bool\n};\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated\n});\n\nexport default connect(mapStateToProps, { login })(Login);\n","import React, { Fragment, useState } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { neederLogin } from '../../actions/auth';\n\nconst Needer = ({ neederLogin, isAuthenticated }) => {\n  const [formDate, setFormData] = useState({\n    phone: '',\n    password: ''\n  });\n\n  const { phone, password } = formDate;\n\n  const onChange = e =>\n    setFormData({\n      ...formDate,\n      phone: e.target.value,\n      password: e.target.value\n    });\n\n  const onSubmit = async e => {\n    e.preventDefault();\n    neederLogin(phone, password);\n  };\n\n  //Redirect\n  if (isAuthenticated) {\n    return <Redirect to='/posts/myPost' />;\n  }\n\n  return (\n    <Fragment>\n      <div className='container'>\n        <p className='welcome large text-deep my-1'>\n          <i class='fas fa-smile'></i> আপনাকে স্বাগতম\n        </p>\n        <p className='lead text-deep my-1'>\n          <i className='fas fa-user'></i> অ্যাপ্লিকেশন পূরণ করার সময় যেই মোবাইল\n          নাম্বারটি দিয়েছেন তা প্রবেশ করুন\n        </p>\n        <form className='form' onSubmit={e => onSubmit(e)}>\n          <div className='form-group'>\n            <input\n              type='number'\n              placeholder='মোবাইল নাম্বার'\n              name='phone'\n              value={phone}\n              onChange={e => onChange(e)}\n              required\n            />\n          </div>\n          <input type='submit' className='btn btn-danger' value='Login' />\n        </form>\n        <p className='my-1'>\n          আপনি প্রথমবার রক্ত গ্রহীতা হলে{' '}\n          <Link className='text-red' to='/newApplication'>\n            New Application\n          </Link>\n        </p>\n      </div>\n    </Fragment>\n  );\n};\n\nNeeder.propTypes = {\n  neederLogin: PropTypes.func.isRequired,\n  isAuthenticated: PropTypes.bool\n};\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated\n});\n\nexport default connect(mapStateToProps, { neederLogin })(Needer);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nconst Alert = ({ alerts }) =>\n  alerts !== null &&\n  alerts.length > 0 &&\n  alerts.map(alert => (\n    <div key={alert.id} className={`alert alert-${alert.alertType}`}>\n      {alert.msg}\n    </div>\n  ));\n\nAlert.propTypes = {\n  alerts: PropTypes.array.isRequired\n};\n\nconst mapStateToProps = state => ({\n  alerts: state.alert\n});\n\nexport default connect(mapStateToProps)(Alert);\n","import React, { Fragment } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst Footer = props => {\n  return (\n    <Fragment>\n      <footer>\n        <div className='social'>\n          <Link to='/about' className='support'>\n            About Us\n          </Link>\n          <a href='https://www.facebook.com/bloodsourcebd' className='tweet'>\n            Contact Us\n          </a>\n          <a\n            href='https://www.facebook.com/groups/254594659278593/?epa=SEARCH_BOX'\n            className='face'\n          >\n            f\n          </a>\n          <Link to='/termsandconditions' className='linked'>\n            Terms\n          </Link>\n        </div>\n      </footer>\n    </Fragment>\n  );\n};\n\nFooter.propTypes = {};\n\nexport default Footer;\n","import React, { Fragment } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport {\n  Jumbotron,\n  Image,\n  Card,\n  Button,\n  Container,\n  Row,\n  Col\n} from 'react-bootstrap';\nimport Footer from './Footer';\n\nconst Home = props => {\n  return (\n    <Fragment>\n      <div className='landing'>\n        <Jumbotron className='homeJumbo'>\n          <div>\n            <p className='welcome text-deep large'>\n              <i className='fas fa-smile'></i> আসুন একটি জীবন বাচাই\n            </p>\n          </div>\n        </Jumbotron>\n\n        <div className='home-nav'>\n          <div>\n            <div className='home-nav-1 badge-firm m-1'>\n              <div>\n                <p className='text-white mid'>আমার রক্তের প্রয়োজন</p>\n              </div>\n              <div className='buttons'>\n                <Link to='/newApplication' className='btn btn-primary'>\n                  Application\n                </Link>\n                <Link to='/needer' className='btn btn-light'>\n                  Login\n                </Link>\n              </div>\n            </div>\n            <div>\n              <p className='text-deep'>\n                কিভাবে রক্ত পাব? <Link to='/howtoget'>Click Here</Link>\n              </p>\n            </div>\n          </div>\n          <div>\n            <div className='home-nav-1 badge-red m-1'>\n              <div>\n                <p className='text-white mid'>অমি রক্ত দিতে চাই</p>\n              </div>\n              <div className='buttons'>\n                <Link to='/register' className='btn btn-primary'>\n                  Sign Up\n                </Link>\n                <Link to='/login' className='btn btn-light'>\n                  Login\n                </Link>\n              </div>\n            </div>\n            <div>\n              <p className='text-deep'>\n                কিভাবে রক্ত দিব? <Link to='howtodonate'>Click Here</Link>\n              </p>\n            </div>\n          </div>\n        </div>\n        <div>\n          <p className='non-profit text-deep'>\n            We are a non-profitable organisation to serve human kind\n          </p>\n        </div>\n      </div>\n      <Footer />\n    </Fragment>\n  );\n};\n\nHome.propTypes = {};\n\nexport default Home;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport {\n  Jumbotron,\n  Image,\n  Card,\n  Button,\n  Container,\n  Row,\n  Col\n} from 'react-bootstrap';\n\nconst HowToDonate = props => {\n  return (\n    <div className='container text-deep landing-how'>\n      <Card style={{ backgroundColor: '#fb0444' }}>\n        <Card.Body>\n          <Card.Title\n            className='text-deep lead'\n            style={{ textAlign: 'center', fontSize: '2em', color: '#ecf0f1' }}\n          >\n            রক্ত দাতা (Blood Donor) হওয়ার নিয়মাবলীঃ\n          </Card.Title>\n          <Card.Text style={{ color: '#ecf0f1' }}>\n            কিছু শর্ত রয়েছে যা কোনও ব্যক্তিকে অস্থায়ী বা স্থায়ীভাবে রক্তদান\n            থেকে বাধা দেয়। অস্থায়ী শর্তগুলির মধ্যে রয়েছে: <br />\n            <br />\n            • গর্ভাবস্থা <br />• তীব্র জ্বর <br />• সাম্প্রতিক অ্যালকোহল খাওয়া{' '}\n            <br />• কান বা দেহ ছিদ্র এবং উল্কি আকা। <br />• সার্জারি <br />\n            <br />\n            নিম্নলিখিত শর্তযুক্ত ব্যক্তিরা কোনওভাবেই রক্তদান করতে পারবেন না:{' '}\n            <br />\n            <br />• ক্যান্সার। <br />• কার্ডিয়াক ডিজিজ। <br />• ফুসফুসের অসহায়\n            রোগ। <br />• হেপাটাইটিস বি এবং সি। <br />• এইচআইভি সংক্রমণ, এইডস বা\n            যৌন সংক্রমণজনিত রোগ (এসটিডি) <br />• উচ্চ ঝুঁকি পেশা (উদাঃ\n            পতিতাবৃত্তি) । <br />• অবজ্ঞাত ওজন হ্রাস 6 মাসের মধ্যে 5 কেজি বেশি ।{' '}\n            <br />• দীর্ঘস্থায়ী মদ্যপান । <br />• অন্য যেসকল শর্ত বা রোগ যা\n            রক্ত দাতাদের মেডিকেল অ্যাসেসমেন্টের গাইডে বর্ণিত রয়েছে। <br />\n            <br />\n            আমাদের রক্ত দাতা (Blood Donor)টিম এ যুক্ত হবার নিয়মঃ <br />\n            একজন দাতা হিসাবে আপনাকে স্বাগতম।\n            <br />\n            <br />• Home Page থেকে <Link to='register'> Sign Up</Link> এ ক্লিক\n            করুন। <br />• প্রত্যেকটি ঘর সঠিক তথ্য দিয়ে পূরণ করুন। <br />• আপনার\n            মোবাইল নম্বর এবং আপনার পাসওয়ার্ড খুব ই গুরুত্বপূর্ণ যেটা দিয়ে আপনি\n            লগিন (Login) হতে পারবেন। <br />• Sign Up এর পরে আপনার Id টি Admin এর\n            কাছে যাচাই এর জন্যে প্রেরণ করা হবে। আপনার Id টি Admin approve করলে\n            আপনি Blood Source এর একজন proud donor হয়ে যাবেন। <br />• মনে রাখবেন\n            আপনার Id তৈরি হলে আপনার Available Status ‘Yes’ হয়ে যাবে। আপনি ওই\n            সময়ে রক্ত দান করতে অক্ষম থাকলে Available Status ‘No’ করে দিতে ভুলবেন\n            না এবং পরবর্তীতে “Yes” করে রাখুন যখন রক্ত দান করতে প্রস্তুত থাকবেন।{' '}\n            <br />• আপনি আপনার Dashboard থেকে আপনার আশে পাশের যেসব মানুষের আপনার\n            ব্লাড গ্রুপ এর রক্ত প্রয়োজন তাদের অ্যাপ্লিকেশান গুল দেকতে পারবেন।{' '}\n            <br />• দয়া করে আপনার Facebook profile লিঙ্কটি দিয়ে আমাদের আপনাকে\n            চিনতে সহযোগিতা করুন। এই তথ্য এডমিন ছাড়া আর কাউ দেকতে পারবে না।{' '}\n            <br />\n            <br />\n            যে কোন ধরনের জিজ্ঞাশা থাকলে contact us এ ক্লিক করে আমাদের সাথে\n            যোগাযোগ করুন। আমরা যত দ্রুত সম্ভব আপনার সাথে যোগাযোগ করব। <br />\n            <br />\n            মনব সেবাই আমাদের লক্ষ, আমাদের লক্ষ পুরনে আপনাদের সহযোগিতা একান্ত\n            কাম্য।\n          </Card.Text>\n        </Card.Body>\n      </Card>\n    </div>\n  );\n};\n\nHowToDonate.propTypes = {};\n\nexport default HowToDonate;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport {\n  Jumbotron,\n  Image,\n  Card,\n  Button,\n  Container,\n  Row,\n  Col\n} from 'react-bootstrap';\n\nconst HowToGet = props => {\n  return (\n    <div className='container text-deep landing-how'>\n      <Card style={{ backgroundColor: '#2471a3' }}>\n        <Card.Body>\n          <Card.Title\n            className='text-deep lead'\n            style={{ textAlign: 'center', fontSize: '2em', color: '#ecf0f1' }}\n          >\n            রক্ত দাতা খুঁজার নিয়ামাবলিঃ\n          </Card.Title>\n          <Card.Text style={{ color: '#ecf0f1' }}>\n            আপনি খুব সহজেই যে কোন রুগির জন্য আমাদের সহযোদ্ধাদের কাছ থেকে রক্ত\n            পেতে পারেন। আপনি যদি প্রথমবার রক্ত নিতে চান তবে নিন্মক্ত নিয়মাবলী\n            আনুসরন করুনঃ <br />\n            <br />• <Link to='newApplication'>New Application</Link> এ ক্লিক\n            করুন এবং ওইখানের ফাকা ঘর গুল সঠিকভাবে পূরণ করুন। <br />• প্রথম ঘরটি\n            তে আপনার কেন রক্ত প্রয়োজন সেটা লিখুন এবং রুগির বর্তমান অবস্থা, রোগের\n            বিবরণ এর তথ্যগুলো পূরণ করুন। <br />• এরপর আপনার মোবাইল নম্বর দিন।\n            মনে রাখবেন এই মোবাইল নম্বর খুভই গুরুত্বপূর্ণ। এটা দিয়ে পরবর্তীতে\n            আপনি আমাদের এই (web service) Blood Source ব্যবহার করতে পারবেন এবং এই\n            মোবাইল নম্বর পরিবর্তন করা যাবে না। <br />• এরপর আপনার নিজের নাম\n            লিখুন। <br />• পরবর্তীতে রোগীর ব্লাড গ্রুপ(Blood Group) প্রদান করুন।{' '}\n            <br />• এরপর হাসপাতাল বা ক্লিনিক এর ঠিকানা সঠিকভাবে প্রদান করুন।{' '}\n            <br />\n            <br />\n            সকল ঘরগুলো পূর্ণ হয়ে গেলে Submit Button টিতে Click করবেন। অতপর\n            আপনাকে Dashboard নামক পেজে নিয়ে যাওয়া হবে যেখানে আপনি আপনার রক্ত\n            দাতা (Blood Donor) এর লিস্ট দেখতে পাবেন এবং তাদের সাথে যোগাযোগ করে\n            দ্রুত রক্ত সংগ্রহ করতে পারবেন। আপনার অ্যাপ্লিকেশান টি করার পর\n            স্বয়ংক্রিয় একটি আইডি তৈরি হবে। আপনি পরবর্তীতে যেকোনো সময়ে আপনার\n            মোবাইল নম্বর ব্যবহার করে লগইন(login) করতে পারবেন এবং আপনার\n            অ্যাপ্লিকেশান, রক্ত দাতাদের লিস্ট দেখে নিতে পারবেন। এই আইডিটি\n            ব্যবহার করে আপনি পরবর্তীতে যতবার খুশি যেকোনো ব্লাড গুরুপ (Blood\n            group) এর রক্তের জন্যে রক্ত দাতা (Blood Donor) খুঁজতে পারবেন। <br />\n            <br />\n            মনে রাখবেন আমরা আছি আপনাদের পাশে, তাই আমাদের সাথে যোগাযোগ করে আপনাকে\n            রক্ত দেয়ার সুযোগ দিন।\n          </Card.Text>\n        </Card.Body>\n      </Card>\n    </div>\n  );\n};\n\nHowToGet.propTypes = {};\n\nexport default HowToGet;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst TermsAndConditions = props => {\n  return (\n    <div className='container text-deep'>\n      <p className='large'>\n        Blood Source Terms and Conditions, Data and Cookie Policies\n      </p>\n      <p>\n        Legal Terms <br />\n        <br />\n        GENERAL: - <br />\n        <br />• This electronic record is generated by a computer system and\n        does not require any physical or digital signature.\n        <br />• By accessing the Website or Application, whether through a\n        mobile device, mobile application or computer, the User agrees to be\n        bound by these Terms of Use (\"Terms\") and the Privacy Policy ('Policy'),\n        whether or not the User creates an account to avail of the Service. If\n        the User wishes to avail of the Service, the User does hereby\n        unequivocally accept and agree to the contents of these Terms and the\n        Policy.\n        <br />\n        <br />\n        ACCEPTANCE OF TERMS: - <br />\n        <br />\n        The User is aware and agrees that the Company reserves the sole and\n        exclusive right to amend or modify these Terms without any prior\n        permission or intimation to the User, and the User expressly agrees that\n        any such amendments or modifications shall come into effect immediately.\n        The User has a duty to periodically check the terms and stay updated on\n        its requirements. If the User continues to use the Application following\n        such a change, the User will be deemed to have consented to any and all\n        amendments / modifications made to the Terms. In so far as the User\n        complies with these Terms, he/she is granted a personal, non-exclusive,\n        non-transferable, revocable, limited privilege to access and use the\n        Application. <br />\n        <br />\n        CREATION OF AN ACCOUNT AND REGISTRATION: - <br />\n        <br />• In order to use Service, the User must first provide certain\n        details to the Company through the Application, including but not\n        limited to the User's name, age, sex, blood type, blood requirement,\n        eligibility, mobile phone number, email address, photographs, user name,\n        password, geographical location, etc., to create an account that can\n        subsequently be used to avail of the Service. The User agrees that all\n        information provided to the Company shall be accurate to the best of the\n        User's knowledge, belief and information, and shall be updated whenever\n        appropriate, in a timely manner. The User hereby authorizes the Company\n        to access and use any and all such information provided, as governed by\n        these Terms and the Policy. <br />\n        <br />\n        TERM AND TERMINATION: - <br />\n        <br />\n        These Terms will remain in full force and effect while the User avails\n        of the Service and/or is in possession of an active account. The User is\n        aware that the Company may terminate or suspend the User's account at\n        any time, without cause or notice, if the Company believes that the User\n        has breached the Terms or Policy, or for any other reason, in its sole\n        discretion. The User is further aware and expressly agrees that even\n        after the User's account is terminated for any reason, these Terms and\n        the Policy shall survive such termination, and continue to operate in\n        full force and effect, except for any terms that by their nature expire\n        or are fully satisfied. <br />\n        <br />\n        NON-COMMERCIAL USE BY USERS: - <br />\n        <br />\n        The Service is only for the personal use of the User. The User may not\n        use the Service or any content contained in the Service (including, but\n        not limited to, content of other users or establishments, designs, text,\n        graphics, images, video, information, logos, software, audio files and\n        computer code) in connection with any commercial endeavors, including\n        but not limited to advertising or soliciting any User to buy or sell any\n        products or services not offered by the Company or through the\n        Application. The User may not use any information obtained from the\n        Service to contact, advertise to, solicit, or sell any product/service\n        to any other User, either within the Application or otherwise.\n        Organizations, companies, and/or businesses may not use the Application\n        or the Service for any purpose. The Company may investigate and take any\n        available legal action in response to illegal and/or unauthorized uses\n        of the Service, including the collection of usernames and/or email\n        addresses of other users by electronic or other means, for the purpose\n        of sending unsolicited email and unauthorized framing of or linking to\n        the Application or Service. <br />\n        <br />\n        ROLE AND RESPONSIBILITY OF THE COMPANY: - <br />\n        <br />• Upon registration as a Member after filling the form and\n        providing details, the Application will provide You with facility to\n        avail the Services, where You can raise a request for blood of a certain\n        type, browse existing requests for blood of a certain type and see\n        suggestions based on Your blood group type or preferences for a\n        potential match with other Users or Members. <br />• Raising a request\n        for blood entails filling up a form wherein preferences are required to\n        be mentioned by You, including but not limited to the blood type\n        required, along with geographical location details. The request will\n        then be shared by the Application with other Members. <br />• We will\n        endeavor to provide Member profile(s) as per your set preferences\n        subject to availability of profile in the database of the Application.{' '}\n        <br />• Suggestions made by Application are based on the data provided\n        by the Members in their blood group type preferences, and other\n        technological factors. Each Member agrees to exercise due care and\n        caution while proceeding with meeting/contacting with a matched Member\n        profile. <br />• The availability of Member profiles depends on the\n        number of registered Members, and We undertake no obligation to provide\n        You with any definite number of profiles. <br />• We will provide You\n        all assistance related to our Application and take appropriate measures\n        to resolve any complaints which you may have in relation to our\n        Application. <br />• It shall be the responsibility of the Company to\n        display the Member profiles in a form decided by Us, and to take\n        appropriate measures for any Member's account if We receive any\n        complaint from any of our Members against another Member. <br />• In the\n        event that it is found that a false complaint is filed by any Member,\n        then it is the victim Member's responsibility to take appropriate action\n        if any at their own expense, and the Company is not liable for the same.{' '}\n        <br />• We may provide You with reasonable assistance, to be determined\n        at the discretion of the Company, in providing any information pursuant\n        to an order of a competent enforcement or judicial authority, provided\n        that any expenses in doing so is to be borne by the Member who has taken\n        any action. The same is notwithstanding the result of any such claim or\n        action taken before any such authority. <br />• The profiles shared with\n        Members are from the data available with the Application. We do not make\n        any representations as to the accuracy and authenticity or otherwise in\n        relation to any such data either provided at the time of registration or\n        maintained subsequently. Our one-time password method only provide an\n        assurance that the mobile number provided at the time of registration\n        was in active state. <br />\n        <br />\n        Role and Responsibility of Member/ User: - <br />\n        <br />• Members agree that a basic prerequisite for use of the Website\n        is easy access to the internet and internet browsing facilities\n        supported by the website, as well as a working phone number by which the\n        Member is accessible. All expenses in relation to the same are to be\n        borne entirely by the Members, and Members further agree that the\n        Company shall not be liable for any\n        shortcomings/deficiencies/interruptions/mistakes/down time of any nature\n        in the services provided for by the internet/telecom service\n        provider(s). <br />• Members agree to exercise due care and caution\n        while shortlisting other Members and satisfy themselves before making a\n        choice of the match through adequate efforts, initiatives and due\n        diligence. We are not liable for the consequences of any\n        misrepresentations made by any Members to You. However, if it is\n        reported or found by us that any Member's profile is misleading or\n        inaccurate or any Member is not in conformity with these Terms and\n        Privacy Policy, then We reserve the right to suspend, terminate or block\n        such a Member at the discretion of the Company <br />• Members agree to\n        verify the credentials of other Members such as blood group type, blood\n        donation/requirement eligibility, medical status, contact details,\n        character, etc. <br />• Members shall disclose their proper health\n        records and blood group type specific information (if applicable) in the\n        form and keep such information up to date at all times. Such health\n        information may include but is not limited to any pre-existing illness.\n        Non-disclosure of such information or inaccurate disclosure of such\n        information at all times shall be treated as violation of the Terms and\n        Policy. <br />\n        <br />\n        Members are expected to refrain from: <br />\n        <br />• Entering into financial transactions with shortlisted prospects.{' '}\n        <br />• Dealing with shortlisted prospects in any manner before carrying\n        out due verifications of the prospect. <br />• Entering into any\n        deal/contract with prospect outside the Application. <br />• Sharing of\n        confidential and personal data with each other. <br />• Members are\n        expected to be cautious of Members who call from multiple numbers, only\n        interact over phone, doesn't come forward for face to face meetings\n        (physically or through video calls) upon request and don't involve\n        family and friends in blood request matching. <br />• Members cannot use\n        the profile shared to them for the benefit of any third person(s) or for\n        gaining any commercial benefits and any contravention of the same shall\n        amount to a violation of these Terms. <br />• Membership for the\n        purposes of blood request match over our Application is restricted\n        strictly to the registered individual Members only. Member's data cannot\n        be used for any commercial purpose or for competitive business or for\n        any other purpose than specified purpose of match between blood donor\n        and blood seeker or such other purpose as may be notified by Us from\n        time to time. <br />• You shall not assign or transfer Your Membership\n        to any other person or entity. <br />• We and our partners may contact\n        you over phone / e-mail / SMS and in such technological modes as are\n        prevailing in the market, and by submitting the form, you waive any\n        right to treat such communication as unsolicited commercial\n        communication notwithstanding the fact that your number is registered\n        under the National Do Not Call Registry or any other registry\n        established for similar purposes. <br />• In the event of any\n        contravention of these Terms or Policy by any Member, the Company\n        reserves our right to initiate appropriate legal action against the\n        concerned Member. <br />\n        <br />\n        ACCOUNT SECURITY: - <br />\n        <br />\n        The User is responsible for maintaining the confidentiality of his/her\n        username and password, assigned to the User during the registration\n        process, and the User is solely responsible for all activities that\n        occur under the User's username and password. The User agrees to\n        immediately notify the Company of any disclosure or unauthorized use of\n        the User's username or password, or any other breach of security with\n        respect to the User's account, and also ensure that he/she logs out from\n        his/her account at the end of each session. <br />\n        <br />\n        INTERACTIONS WITH OTHER USERS: - <br />\n        <br />• The User agrees and acknowledges that the User is solely\n        responsible for his/her interactions with other users. The User\n        understands that the Company does not conduct any background checks,\n        medical checks or screenings on any of its Users. The User is further\n        aware that the Company also does not inquire into the backgrounds of any\n        of its users or attempt to verify the statements of its Users. The\n        Company makes no representations or warranties as to the conduct of its\n        Users, or the information / material made available by them to other\n        Users, and the User expressly agrees and acknowledges that the Company\n        will not be liable for the same in any manner whatsoever. <br />\n        <br />\n        PROPRIETARY RIGHTS: - <br />\n        <br />\n        Two owner named Md.Badruddoza and Dipankar Bhadra <br />\n        <br />\n        CONTENT POSTED BY THE USER: - <br />\n        <br />• The User acknowledges and agrees that he/she is solely\n        responsible for the content and information that he/she posts, uploads,\n        publishes, links to, transmits, records, displays or otherwise makes\n        available on the Service or transmits to other users, including text\n        messages, chat, photographs, whether posted on the Website or\n        Application, or privately transmitted to other Users. The User may not\n        Post as part of the Service, or transmit to the Company or to any other\n        user (either on or off the Service), any offensive, inaccurate,\n        incomplete, abusive, obscene, profane, threatening, intimidating,\n        harassing, racially offensive, or illegal material, or any material that\n        infringes or violates another person's rights (including intellectual\n        property rights, and rights of privacy and publicity). The User\n        represents and warrants that all information that the User submits upon\n        creation of the account is accurate and truthful, and that the User will\n        promptly update any information that subsequently becomes inaccurate,\n        incomplete, misleading or false. <br />• The User understands and agrees\n        that the Company may, but is not obligated to, monitor or review any\n        content the User posts as part of the Service. The Company may delete\n        any content, in whole or in part, that in the sole judgment of the\n        Company violates these Terms or may harm the reputation of the\n        Application, Website, Service or Company. <br />• The User may not post,\n        upload, display or otherwise make available content that: <br />\n        <br />\n        1. promotes racism, bigotry, hatred or physical harm of any kind against\n        any group or individual; <br />\n        2. advocates harassment or intimidation of another person; <br />\n        3. is intended to otherwise defraud other users of the Service; <br />\n        4. involves the transmission of 'junk mail', 'chain letters', or\n        unsolicited mass mailing or 'spamming' (or 'spimming', 'phishing',\n        'trolling' or similar activities); <br />\n        5. promotes information that is false or misleading, or promotes illegal\n        activities or conduct that is defamatory, libelous or otherwise\n        objectionable; <br />\n        6. promotes an illegal or unauthorized copy of another person's\n        copyrighted work; <br />\n        7. contains video, audio photographs, or images of another person\n        without his or her permission (or in the case of a minor, the minor's\n        legal guardian); <br />\n        8. contains restricted or password only access pages, or hidden pages or\n        images (those not linked to or from another accessible page); <br />\n        9. provides material that exploits people in a sexual, violent or other\n        illegal manner, or solicits personal information from anyone under the\n        age of 18; <br />\n        10. provides instructional information about illegal activities such as\n        making or buying illegal weapons or drugs, violating someone's privacy,\n        or providing, disseminating or creating computer viruses; <br />\n        11. contains viruses, time bombs, trojan horses, cancelbots, worms or\n        other harmful, or disruptive codes, components or devices; <br />\n        12. impersonates, or otherwise misrepresents affiliation, connection or\n        association with, any person or entity; <br />\n        13. provides information or data the User do not have a right to make\n        available under law or under contractual or fiduciary relationships\n        (including, but not limited to inside information, proprietary and\n        confidential information); <br />\n        14. disrupts the normal flow of dialogue, causes a screen to 'scroll'\n        faster than other users are able to type, or otherwise negatively\n        affects other users' ability to engage in real time exchanges; <br />\n        15. solicits passwords or personal identifying information for\n        commercial or unlawful purposes from other users or disseminates another\n        person's personal information without his or her permission; and\n        <br />\n        16. publicizes or promotes commercial activities and/or sales without\n        our prior written consent such as contests, sweepstakes, barter,\n        advertising, and pyramid schemes. <br />\n        <br />• The Company reserves the right, in its sole discretion, to\n        investigate and take any legal action against any User who violates this\n        provision, including removing the offending communication from the\n        Service and terminating or suspending the account of such User. <br />•\n        The User's use of the Service, including all content posted by the User\n        through the Service, must comply with all applicable laws and\n        regulations. The User agrees and acknowledges that the Company may\n        access, preserve and disclose the User's account information and content\n        if required to do so by law, or if it in good faith believes that such\n        access, preservation or disclosure is reasonably necessary, to: <br />\n        <br />\n        1. comply with any legal process; <br />\n        2. enforce these Terms; <br />\n        3. respond to claims that any content violates the rights of third\n        parties; <br />\n        4. respond to the User's requests for customer service, or allow the\n        User to use the Service in the future; or <br />\n        5. protect the rights, property or personal safety of the Company or any\n        other person. • The User agrees that any content the User posts on the\n        Service may be viewed by other users and may be viewed by any person\n        visiting or participating in the Service. <br />\n        <br />\n        INDEMNITY: - <br />\n        <br />\n        Any Member's conduct, personal interaction either over the Website or\n        otherwise, and any communication or transactions of any nature are\n        outside the purview of the scope of Service of the Company, and each\n        Member agrees to indemnify and hold Us harmless in relation to the same.\n        Any and all Members also agree to hold all the\n        Directors/officials/employees and persons associated with the Company,\n        Application and Website harmless in relation to the same. <br />\n        <br />\n        PROHIBITED ACTIVITIES: - <br />\n        <br />\n        The Company reserves the right to investigate, suspend and/or terminate\n        the User account if the User has misused the Service or behaved in a\n        manner the Company regards as inappropriate or unlawful, including\n        actions or communications that occur off the Service, but involve users\n        of the Service or information obtained through the Service. The\n        following is a non-exclusive list of actions and activities that the\n        User is not permitted to engage in while availing of the Service: <br />\n        <br />• impersonate any person or entity; <br />• post any content that\n        is prohibited by these Terms or any applicable law currently in force;{' '}\n        <br />• stalk or otherwise harass any person; <br />• express or imply\n        that any statements the User makes are endorsed by the Company without\n        the Company's specific prior written consent; <br />• use the Service in\n        an illegal manner or to commit an illegal act; <br />• ask or use users\n        to conceal the identity, source, or destination of any illegally gained\n        money or products; <br />• use any robot, spider, site search/retrieval\n        application, or other manual or automatic device or process to retrieve,\n        index, \"data mine\", or in any way reproduce or circumvent the\n        navigational structure or presentation of the Service or its contents;{' '}\n        <br />• collect usernames and/or email addresses of users by electronic\n        or other means for the purpose of sending unsolicited email or\n        unauthorized framing of or linking to the Service; <br />• interfere\n        with or disrupt the Service or the servers or networks connected to the\n        Service; <br />• email or otherwise transmit any material that contains\n        software viruses, or any other computer code, files or programs designed\n        to interrupt, destroy or limit the functionality of any computer\n        software or hardware or \"frame\" or \"mirror\" any part of the Service,\n        without the Company's prior written authorization; <br />• use meta\n        telecommunications equipment; <br />• forge headers or otherwise\n        manipulate identifiers in order to disguise the origin of any\n        information transmitted to or through the Service (either directly or\n        indirectly through use of third-party software); <br />• tags or code or\n        other devices containing any reference to the Company or the Service (or\n        any trademark, trade name, service mark, logo or slogan of the Company)\n        to direct any person to any other website for any purpose; <br />•\n        modify, adapt, sublicense, translate, sell, reverse engineer, decipher,\n        decompile or otherwise disassemble any portion of the Service any\n        software used on or for the Service, or cause others to do so; <br />•\n        post, use, transmit or distribute, directly or indirectly, (e.g. screen\n        scrape) in any manner or media any content or information obtained from\n        the Service other than solely in connection with the User use of the\n        Service in accordance with these Terms. <br />\n        <br />\n        CUSTOMER SERVICE: - <br />\n        <br />\n        The Company may provide assistance and guidance through its customer\n        care representatives. When communicating with the Company's customer\n        care representatives, the User agrees to not be abusive, obscene,\n        profane, offensive, sexist, threatening, harassing, racially offensive,\n        and to not otherwise behave inappropriately. If the Company is of the\n        impression that the User's behavior towards any of its customer care\n        representatives or other employees is at any time threatening or\n        offensive as described hereinabove, the Company reserves the right to\n        immediately terminate the User's account. <br />\n        <br />\n        MODIFICATIONS TO SERVICE: -<br />\n        <br />\n        The Company reserves the right at any time to modify or discontinue,\n        temporarily or permanently, the Website, Application or Service (or any\n        part thereof) with or without notice. The User agrees and acknowledges\n        that the Company shall not be liable to the User or to any third party\n        for any modification, suspension or discontinuance of the Service. To\n        protect the integrity of the Service, the Company reserves the right to\n        block users from certain IP addresses from accessing the Service, at any\n        time and in its sole discretion. <br />\n        <br />\n        DISCLAIMERS: - <br />\n        <br />• The User acknowledges and agrees that neither the Company nor\n        its affiliates or third-party partners are responsible for, and shall\n        not be deemed to have any liability - directly or indirectly, any loss\n        or damage, including personal injury or death, as a result of or alleged\n        to be the result of\n        <br />• any incorrect or inaccurate content posted in the Service,\n        whether caused by users or any of the equipment or programming\n        associated with or utilized in the Service; <br />• the timeliness,\n        deletion or removal, incorrect delivery or failure to store any content,\n        communications or personalization settings; <br />• the conduct, whether\n        online or offline, of any user; <br />• any error, omission or defect\n        in, interruption, deletion, alteration, delay in operation or\n        transmission, theft or destruction of, or unauthorized access to, any\n        user or user communications; <br />• any problems, failure or technical\n        malfunction of any telephone network or lines, computer online systems,\n        servers or providers, computer equipment, software, failure of email or\n        any other online portal/facility on account of technical problems or\n        traffic congestion on the Internet or at any website or combination\n        thereof, including injury or damage to users or to any other person's\n        computer or device related to or resulting from participating or\n        downloading materials in connection with the Internet and/or in\n        connection with the Service, and the User hereby expressly acknowledges\n        and agrees that the Company has no responsibility or control over the\n        same. <br />• The User is aware and acknowledges that to the maximum\n        extent allowed by applicable laws, the Company provides the Service on\n        an \"as is\" and \"as available\" basis, and grants no warranties of any\n        kind, whether express, implied, statutory or otherwise with respect to\n        the Service (including all content contained therein), including\n        (without limitation) any implied warranties of satisfactory quality,\n        merchantability, fitness for a particular purpose or non-infringement.\n        The Company does not represent or warrant that the Service will be\n        uninterrupted or error free, secure or that any defects or errors in the\n        Service will be corrected. <br />• The Company may make third party\n        opinions, advice, statements, offers, or other third-party information\n        or content available through the Service. The User is aware that all\n        such third-party content is the responsibility of the respective authors\n        thereof, and the Company does not make any warranties or guarantees with\n        respect to the same. The User is further aware that the Company does\n        not: <br />\n        <br />\n        1. guarantee the accuracy, completeness, or usefulness of any\n        third-party content provided through the Service, or\n        <br />\n        2. adopt, endorse or accept responsibility for the accuracy or\n        reliability of any opinion, advice, or statement made by any party that\n        appears in the Service. The User agrees and acknowledges that under no\n        circumstances will the Company or its affiliates be responsible or\n        liable for any loss or damage resulting from the user reliance on\n        information or other Content posted in the Service or transmitted to or\n        by any users. <br />\n        <br />\n        LIMITATION OF LIABILITY: - <br />\n        <br />• If any type of occurrence occurred no one of the agency\n        (Directors/staffs/Well-wishers) will be liable. The Parties\n        (Donor/Needed) expressly agree that. <br />• Agency is not bound to help\n        any of the two Parties (Donor/Needed). The Parties (Donor/Needed)\n        expressly agree that. <br />\n        <br />\n        PRIVACY POLICY: - <br />\n        <br />• This electronic record is generated by a computer system and\n        does not require any physical or digital signature. <br />• By accessing\n        the Website or Application, whether through a mobile device, mobile\n        application or computer, the User agrees to be bound by these Terms of\n        Use (\"Terms\") and the Privacy Policy ('Policy'), whether or not the User\n        creates an account to avail of the Service. If the User wishes to avail\n        of the Service, the User does hereby unequivocally accept and agree to\n        the contents of these Terms and the Policy. <br />• The headings of each\n        section in these Terms are only for the purpose of organizing the\n        various provisions under these Terms in an orderly manner and shall not\n        be used by either Party to interpret the provisions contained herein in\n        any manner. Further, it is specifically agreed to by the Parties that\n        the headings shall have no legal or contractual value. <br />• The use\n        of the Website and Application by the User is solely governed by these\n        Terms read with the Privacy Policy and any modifications or amendments\n        made thereto by the Company from time to time, at its sole discretion.\n        Accessing the Application and/or using any of the information or\n        Services provided therein shall be deemed to signify the User's\n        unequivocal acceptance of these Terms and the aforementioned Policy, and\n        the User expressly agrees to be bound by the same, regardless of however\n        the User or anyone on the User's behalf has accessed, installed,\n        downloaded or used the Application. The User expressly agrees and\n        acknowledges that the Terms and Policy are co-terminus, and that expiry\n        / termination of either one will lead to the termination of the other.\n        The User may not access the Application or avail of any of the Services\n        provided by the Company if the User does not accept and agree to be\n        bound by the Terms and Policy. In the event that the User or anyone\n        acting on the User's behalf does not wish to be bound by the Terms and\n        the Policy, the User (or the legal person/entity acting on the User's\n        behalf) unequivocally agrees to refrain from accessing, using or\n        retaining the Application on any device in any manner whatsoever. The\n        User agrees that anything done or caused to be done by the User or\n        anyone acting on the User's behalf, whether expressly or impliedly in\n        contravention with the Terms or Policy, will render the User liable for\n        legal and punitive action. <br />\n        <br />\n        COLLECTION OF PERSONAL AND OTHER INFORMATION: - <br />\n        <br />• The User is aware and acknowledges that the Company collects and\n        stores the User’s personal information, which is provided by the User\n        from time to time through the Application/website, including but not\n        limited to the User’s user name, passwords, email address, name,\n        address, age, date of birth, sex, nationality, geographical location,\n        web browsing history, etc., as well as any images, chat messages or\n        other information uploaded / published by the User through the\n        Application/website. The User is aware that this information will be\n        used by the Company/Application/website to provide services and features\n        targeted at the User, that are most likely to meet the User’s needs, and\n        also to customize and improve the Application to make its users’\n        experiences safer and easier. <br />• The User is aware that the\n        Company/Application may automatically track certain information about\n        the User, based upon but not limited to, the User’s IP address and the\n        User’s use of the Application, and the User expressly consents to the\n        same. The User is expressly made aware that such information may include\n        the browsing history of the User, whether or not a part of/through the\n        Application. <br />• If the User chooses to avail of the Service through\n        the Application, the User consents to allowing the Company/Application\n        to collect information about the User’s behavior and trends. <br />• The\n        User is aware that any and all information pertaining to the User\n        collected by the Company, whether or not directly provided by the User\n        to the Company/Application, including but not limited to personal\n        correspondence such as emails, feedback from other users or third\n        parties regarding the User’s activities or postings on the\n        Application/website, etc., may be collected and complied by the Company\n        into a file/folder specifically created for / allotted to the User, and\n        the User hereby expressly consents to the same. <br />• The User is\n        aware that while he/she may be able to browse/access some\n        sections/features of the Application/website without being a registered\n        user, certain activities, including but not limited to availing of the\n        Service may require the User to provide valid personal information to\n        the Company/Application/website for the purpose of registration. <br />\n        <br />\n        COOKIES: -<br />\n        <br />\n        • The User is aware that a ‘Cookie’ is a small piece of information\n        stored by a web server on a web browser so it can later be traced back\n        from that particular browser, and that cookies are useful for enabling\n        the browser to remember information specific to a given user, including\n        but not limited to a User’s login identification, password, etc. The\n        User is aware that the Application places both permanent and temporary\n        cookies in the User’s computer's hard drive and web browser and does\n        hereby expressly consent to the same. <br />• The User is further aware\n        that the Application uses data collection devices such as cookies to\n        help analyze web page flow, measure promotional effectiveness, and\n        promote trust and safety, and that certain features of the Application\n        are only available through the use of such cookies. While the User is\n        free to decline the Application’s cookies if the User’s device permits,\n        the User may consequently be unable to use certain features on the\n        Application. <br />• Additionally, the User is aware that he/she might\n        encounter ‘cookies’ or other similar devices on the Application that are\n        placed by third parties or affiliates of the Company. The User expressly\n        agrees and acknowledges that the Company/Application does not control\n        the use of such cookies/other devices by third parties, that the\n        Company/Application is in no way responsible for the same, and that the\n        User assumes any and all risks in this regard. <br />\n        <br />\n        DIVULGING/SHARING OF PERSONAL INFORMATION: - <br />\n        <br />• The User is aware that the Application/Company/agency/website\n        may share the User’s personal information with other entities and\n        affiliates to help detect and prevent identity theft, fraud and other\n        potentially illegal acts; correlate related or multiple accounts to\n        prevent abuse of the Application’s services; and to facilitate joint or\n        co-branded services, where such services are provided by more than one\n        entity. <br />• The User is aware that the\n        Application/Company/agency/website may disclose personal information if\n        required to do so by law or if the Application/Company in good faith\n        believes that such disclosure is reasonably necessary to respond to\n        subpoenas, court orders, or other legal processes. The\n        Application/Company/agency/website may also disclose the User’s personal\n        information to law enforcement offices, third party rights owners, or\n        other third parties if it believes that such disclosure is reasonably\n        necessary to enforce the Terms or Policy; respond to claims that an\n        advertisement, posting or other content violates the rights of a third\n        party; or protect the rights, property or personal safety of its users,\n        or the general public. <br />• The User is further aware that the\n        Application/Company/agency website and its affiliates may share / sell\n        some or all of the User’s personal information with other business\n        entities should the Application/Company/agency/website(or its assets)\n        plan to merge with, or be acquired by such business entity, or in the\n        event of re-organization, amalgamation, or restructuring of the\n        Company’s business. Such business entity or new entity will continue to\n        be bound be the Terms and Policy, as may be amended from time to time.{' '}\n        <br />• Notwithstanding anything contained herein or in the Terms of\n        Service accompanying the present Policy, the User acknowledges that the\n        Company/agency shall protect the confidentiality of all data provided by\n        the User to the Application, and the User accordingly agrees that the\n        Company shall not be held liable for any accidental dissemination of\n        data that has occurred in spite of the Company’s best efforts and\n        procedures to maintain confidentiality. <br />\n        <br />\n        USER’S CONSENT: - <br />\n        <br />\n        By using the Application/website and/ or by providing information to the\n        Company through the Application/website, the User consents to the\n        collection and use of the information disclosed by the User on the\n        Application in accordance with this Policy, including but not limited to\n        the User’s consent to the Company/Application/website/agency\n        sharing/divulging the User’s information, as per the terms contained\n        herein. <br />\n        <br />\n        Declaration: - <br />\n        <br />I consciously declare that this platform is only for motivating us\n        to find a donor or help a recipient who is in need of blood. If any\n        occurrences happen as the donor has some dieses, any medical\n        complications or money transactions/any other problem happens only the\n        recipient and donor are responsible for it. This platform is not\n        responsible for any of these occurrences. This company is just a media\n        where the recipient and donor can find their required member to\n        communicate. It does not support any social and economic transactions.\n        If the recipient or donor faces any kind of problems between them only,\n        they are to be blamed, the website is not responsible for any of these.\n        Whenever I use this website/apps as a user (Donor/ recipient) I accept\n        all the above terms and condition that is describe (top to bottom) in\n        this page.\n      </p>\n    </div>\n  );\n};\n\nTermsAndConditions.propTypes = {};\n\nexport default TermsAndConditions;\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nconst PrivateRoute = ({\n  component: Component,\n  auth: { isAuthenticated, loading },\n  ...rest\n}) => (\n  <Route\n    {...rest}\n    render={props =>\n      !isAuthenticated && !loading ? (\n        <Redirect to='/' />\n      ) : (\n        <Component {...props} />\n      )\n    }\n  />\n);\n\nPrivateRoute.propTypes = {\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps)(PrivateRoute);\n","import { SET_ALERT, REMOVE_ALERT } from '../actions/types';\n\nconst initialState = [{}];\n\nexport default function(state = initialState, action) {\n  const { type, payload } = action;\n\n  switch (type) {\n    case SET_ALERT:\n      return [...state, payload];\n    case REMOVE_ALERT:\n      return state.filter(alert => alert.id !== payload);\n\n    default:\n      return state;\n  }\n}\n","import {\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  USER_LOADED,\n  NEEDER_LOADED,\n  AUTH_ERROR,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT,\n  ADD_POST\n} from '../actions/types';\n\nconst initialState = {\n  token: localStorage.getItem('token'),\n  isAuthenticated: null,\n  loading: true,\n  user: null,\n  users: [],\n  needer: null\n};\n\nexport default function(state = initialState, action) {\n  const { type, payload } = action;\n\n  switch (type) {\n    case USER_LOADED:\n      return {\n        ...state,\n        isAuthenticated: true,\n        loading: false,\n        user: payload\n      };\n    case NEEDER_LOADED:\n      return {\n        ...state,\n        isAuthenticated: true,\n        loading: false,\n        needer: payload\n      };\n    case ADD_POST:\n    case REGISTER_SUCCESS:\n    case LOGIN_SUCCESS:\n      localStorage.setItem('token', payload.token);\n      return {\n        ...state,\n        ...payload,\n        isAuthenticated: true,\n        loading: false\n      };\n    case REGISTER_FAIL:\n    case LOGIN_FAIL:\n    case AUTH_ERROR:\n    case LOGOUT:\n      localStorage.removeItem('token');\n      return {\n        ...state,\n        token: null,\n        isAuthenticated: false,\n        loading: false,\n        user: null,\n        needer: null\n      };\n    default:\n      return state;\n  }\n}\n","import {\n  GET_PROFILE,\n  GET_PROFILES,\n  UPDATE_PROFILE,\n  PROFILE_ERROR,\n  CLEAR_PROFILE\n} from '../actions/types';\n\nconst initialState = {\n  profile: null,\n  profiles: [],\n  loading: true,\n  error: {}\n};\n\nexport default function(state = initialState, action) {\n  const { type, payload } = action;\n  switch (type) {\n    case UPDATE_PROFILE:\n    case GET_PROFILE:\n      return {\n        ...state,\n        profile: payload,\n        loading: false\n      };\n    case GET_PROFILES:\n      return {\n        ...state,\n        profiles: payload,\n        loading: false\n      };\n    case PROFILE_ERROR:\n      return {\n        ...state,\n        error: payload,\n        loading: false\n      };\n    case CLEAR_PROFILE: {\n      return {\n        ...state,\n        profile: null,\n        profiles: null,\n        loading: false\n      };\n    }\n    default:\n      return state;\n  }\n}\n","import {\n  GET_CUSTOMER,\n  GET_CUSTOMERS,\n  GET_USER,\n  GET_USERS,\n  PROFILE_ERROR,\n  CLEAR_PROFILE\n} from '../actions/types';\n\nconst initialState = {\n  customer: null,\n  adminUser: null,\n  customers: [],\n  adminUsers: [],\n  loading: true,\n  error: {}\n};\n\nexport default function(state = initialState, action) {\n  const { type, payload } = action;\n\n  switch (type) {\n    case GET_CUSTOMER:\n      return {\n        ...state,\n        customer: payload,\n        loading: false\n      };\n    case GET_USER:\n      return {\n        ...state,\n        adminUser: payload,\n        loading: false\n      };\n    case GET_CUSTOMERS:\n      return {\n        ...state,\n        customers: payload,\n        loading: false\n      };\n    case GET_USERS:\n      return {\n        ...state,\n        adminUsers: payload,\n        loading: false\n      };\n    case PROFILE_ERROR:\n      return {\n        ...state,\n        error: payload,\n        loading: false,\n        adminUser: null,\n        customer: null\n      };\n    case CLEAR_PROFILE:\n      return {\n        ...state,\n        customers: [],\n        adminUsers: [],\n        adminUser: null,\n        customer: null,\n        loading: false\n      };\n    default:\n      return state;\n  }\n}\n","import {\n  GET_POSTS,\n  CLEAR_POST,\n  GET_POST,\n  POST_ERROR,\n  UPDATE_LIKES,\n  ADD_COMMENT\n} from '../actions/types';\n\nconst initialState = {\n  post: null,\n  posts: [],\n  loading: true,\n  error: {}\n};\n\nexport default function(state = initialState, action) {\n  const { type, payload } = action;\n  switch (type) {\n    case GET_POST:\n      return {\n        ...state,\n        post: payload,\n        loading: false\n      };\n    case GET_POSTS:\n      return {\n        ...state,\n        posts: payload,\n        loading: false\n      };\n    case UPDATE_LIKES:\n      return {\n        ...state,\n        posts: state.posts.map(post =>\n          post._id === payload.id ? { ...post, likes: payload.likes } : post\n        ),\n        loading: false\n      };\n    case ADD_COMMENT:\n      return {\n        ...state,\n        post: { ...state.post, comments: payload },\n        loading: false\n      };\n    case POST_ERROR:\n      return {\n        ...state,\n        error: payload,\n        loading: false\n      };\n    case CLEAR_POST:\n      return {\n        ...state,\n        post: null,\n        posts: null,\n        loading: false\n      };\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from 'redux';\nimport alert from './alert';\nimport auth from './auth';\nimport profile from './profile';\nimport admin from './admin';\nimport post from './post';\n\nexport default combineReducers({\n  alert,\n  auth,\n  profile,\n  admin,\n  post\n});\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;\n","import axios from 'axios';\nimport { setAlert } from './alert';\nimport { loadNeeder } from './auth';\n\nimport {\n  GET_POST,\n  GET_POSTS,\n  POST_ERROR,\n  ADD_POST,\n  ADD_COMMENT,\n  UPDATE_LIKES\n} from './types';\n\nexport const getPosts = () => async dispatch => {\n  try {\n    const res = await axios.get('/api/posts');\n    dispatch({\n      type: GET_POSTS,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status }\n    });\n  }\n};\n\nexport const getPostById = id => async dispatch => {\n  try {\n    const res = await axios.get(`/api/posts/postId/${id}`);\n\n    dispatch({\n      type: GET_POST,\n      payload: res.data\n    });\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: POST_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status }\n    });\n  }\n};\n\nexport const getMyPosts = () => async dispatch => {\n  try {\n    const res = await axios.get('/api/posts/myPosts');\n\n    dispatch({\n      type: GET_POSTS,\n      payload: res.data\n    });\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: POST_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status }\n    });\n  }\n};\n\nexport const getPostsByBlood = () => async dispatch => {\n  try {\n    const res = await axios.get('/api/posts/bloodGroup');\n\n    dispatch({\n      type: GET_POSTS,\n      payload: res.data\n    });\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: POST_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status }\n    });\n  }\n};\n\nexport const addLike = id => async dispatch => {\n  try {\n    const res = await axios.put(`/api/posts/like/${id}`);\n\n    dispatch({\n      type: UPDATE_LIKES,\n      payload: { id, likes: res.data }\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status }\n    });\n  }\n};\n\nexport const addPost = (formData, history) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        'content-type': 'application/json'\n      }\n    };\n\n    const res = await axios.post('/api/posts/newPost', formData, config);\n\n    dispatch({\n      type: ADD_POST,\n      payload: res.data\n    });\n\n    dispatch(setAlert('Post Created', 'success'));\n    dispatch(loadNeeder());\n    dispatch(getMyPosts());\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: POST_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status }\n    });\n  }\n};\n\nexport const addApplication = (formData, history) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        'content-type': 'application/json'\n      }\n    };\n\n    const res = await axios.post('/api/posts/addPost', formData, config);\n\n    dispatch({\n      type: GET_POST,\n      payload: res.data\n    });\n    history.push('/posts/myPost');\n    dispatch(setAlert('Post Created', 'success'));\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: POST_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status }\n    });\n  }\n};\n\nexport const addComment = (postId, formData) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n\n  try {\n    const res = await axios.post(\n      `/api/posts/comment/${postId}`,\n      formData,\n      config\n    );\n\n    dispatch({\n      type: ADD_COMMENT,\n      payload: res.data\n    });\n\n    dispatch(setAlert('Comment Added', 'success'));\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: POST_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status }\n    });\n  }\n};\n","import axios from 'axios';\nimport { setAlert } from './alert';\nimport { loadNeeder } from './auth';\nimport { getMyPosts } from './post';\n\nimport { GET_PROFILES, GET_PROFILE, PROFILE_ERROR } from './types';\n\nexport const createProfile = (formData, history, edit) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        'content-type': 'application/json'\n      }\n    };\n\n    const res = await axios.post('/api/profile', formData, config);\n\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n\n    dispatch(setAlert(edit ? 'Profile Updated' : 'Profile Created', 'success'));\n\n    if (edit || !edit) {\n      history.push('/profile/me');\n    }\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status }\n    });\n  }\n};\n\nexport const getCurrentProfileById = userId => async dispatch => {\n  try {\n    const res = await axios.get(`/api/profile/profileId/${userId}`);\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status }\n    });\n  }\n};\n\nexport const getDonarById = profileId => async dispatch => {\n  try {\n    const res = await axios.get(`/api/profile/donarId/${profileId}`);\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status }\n    });\n  }\n};\n\nexport const getMyDonars = postId => async dispatch => {\n  try {\n    const res = await axios.get(`/api/profile/myDonars/${postId}`);\n    dispatch({\n      type: GET_PROFILES,\n      payload: res.data\n    });\n    dispatch(loadNeeder());\n    dispatch(getMyPosts());\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status }\n    });\n  }\n};\n\nexport const getAllProfiles = () => async dispatch => {\n  try {\n    const res = await axios.get('/api/profile');\n    dispatch({\n      type: GET_PROFILES,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status }\n    });\n  }\n};\n\nexport const getAllDonars = () => async dispatch => {\n  try {\n    const res = await axios.get('/api/profile/donars');\n    dispatch({\n      type: GET_PROFILES,\n      payload: res.data\n    });\n    dispatch(loadNeeder());\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status }\n    });\n  }\n};\n\nexport const getMyProfile = () => async dispatch => {\n  try {\n    const res = await axios.get('/api/profile/me');\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status }\n    });\n  }\n};\n","import React, { useEffect, useState, Fragment } from 'react';\nimport { Link, withRouter, Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { createProfile, getCurrentProfileById } from '../../actions/profile';\n\nconst CreateProfile = ({\n  createProfile,\n  getCurrentProfileById,\n  profile: { profile, loading },\n  history\n}) => {\n  const [formData, setFormData] = useState({\n    email: '',\n    profession: '',\n    bloodGroup: '',\n    donateDate: '',\n    facebook: '',\n    bio: '',\n    can: ''\n  });\n\n  const {\n    email,\n    profession,\n    bloodGroup,\n    donateDate,\n    facebook,\n    bio,\n    can\n  } = formData;\n\n  const onChange = e =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const onSubmit = e => {\n    e.preventDefault();\n    createProfile(formData, history);\n  };\n\n  useEffect(() => {\n    getCurrentProfileById();\n  }, [getCurrentProfileById]);\n\n  return loading && profile == null ? (\n    <Redirect to='/profile/me' />\n  ) : (\n    <Fragment>\n      <div className='container'>\n        <h1 className='large text-primary'>Create Your Profile</h1>\n        <p className='lead'>\n          <i className='fas fa-user' /> Lets get to know you\n        </p>\n        <small>* = required field</small>\n        <form className='form' onSubmit={e => onSubmit(e)}>\n          <div className='form-group'>\n            <select\n              name='bloodGroup'\n              value={bloodGroup}\n              onChange={e => onChange(e)}\n            >\n              <option value='0'>* Select Blood Group</option>\n              <option value='A+'>A+</option>\n              <option value='A-'>A-</option>\n              <option value='B+'>B+</option>\n              <option value='B-'>B-</option>\n              <option value='O+'>O+</option>\n              <option value='O-'>O-</option>\n              <option value='AB+'>AB+</option>\n              <option value='AB-'>AB-</option>\n            </select>\n            <small className='form-text'>Please select correctly</small>\n          </div>\n          <div className='form-group'>\n            <input\n              type='text'\n              placeholder='Email'\n              name='email'\n              value={email}\n              onChange={e => onChange(e)}\n            />\n            <small className='form-text'>\n              Email will be required later if you forget password\n            </small>\n          </div>\n          <div className='form-group'>\n            <input\n              type='text'\n              placeholder='* Your Profession'\n              name='profession'\n              value={profession}\n              onChange={e => onChange(e)}\n            />\n            <small className='form-text'>\n              Please provide your current occupation\n            </small>\n          </div>\n          <div className='form-group'>\n            <input\n              type='text'\n              placeholder='* Facebook Link'\n              name='facebook'\n              value={facebook}\n              onChange={e => onChange(e)}\n            />\n            <small className='form-text'>Your Facebook Link</small>\n          </div>\n          <div className='form-group'>\n            <textarea\n              placeholder='A short bio of yourself'\n              name='bio'\n              value={bio}\n              onChange={e => onChange(e)}\n            />\n            <small className='form-text'>Tell us a little about yourself</small>\n          </div>\n          <div className='form-group'>\n            <input\n              type='text'\n              placeholder='* Last Blood Donate Time'\n              name='donateDate'\n              value={donateDate}\n              onChange={e => onChange(e)}\n            />\n            <small className='form-text'>\n              If never donated yet put \"Never\"\n            </small>\n          </div>\n          <div className='form-group'>\n            <select name='can' onChange={e => onChange(e)}>\n              <option value='0'>* Select Availability Status</option>\n              <option value='yes'>Yes</option>\n              <option value='no'>No</option>\n            </select>\n            <small className='form-text'>\n              Tell us if are able to donate blood\n            </small>\n          </div>\n\n          <input type='submit' className='btn btn-primary my-1' />\n          <Link className='btn btn-light my-1' to='/dashboard'>\n            Go Back\n          </Link>\n        </form>\n      </div>\n    </Fragment>\n  );\n};\n\nCreateProfile.propTypes = {\n  createProfile: PropTypes.func.isRequired,\n  getCurrentProfileById: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired\n};\nconst mapStateToProps = state => ({\n  profile: state.profile\n});\nexport default connect(mapStateToProps, {\n  createProfile,\n  getCurrentProfileById\n})(withRouter(CreateProfile));\n","import React, { Fragment } from 'react';\nimport spinner from './spinner.gif';\n\nexport default () => (\n  <Fragment>\n    <img\n      src={spinner}\n      style={{ width: '200px', margin: 'auto', display: 'block' }}\n      alt='Loading...'\n    />\n  </Fragment>\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport img_1 from '../../img/img_1.png';\nimport img_2 from '../../img/img_2.png';\n//style={{ color: 'red' }}\nconst ProfileAbout = ({\n  profile: {\n    email,\n    profession,\n    bloodGroup,\n    donateDate,\n    facebook,\n    bio,\n    can,\n    area,\n    thana,\n    user: { name, phone }\n  }\n}) => {\n  return (\n    <div className='profile-top bg-red'>\n      <div>\n        <p>\n          <span className='large'> {name}</span>{' '}\n          <span>\n            <a href={facebook} target='_blank' rel='noopener noreferrer'>\n              <i className='fab fa-facebook fa-2x' />\n            </a>\n          </span>\n        </p>\n      </div>\n      <br />\n      <p className='lead'>\n        <span>Blood Group:</span> <span>{bloodGroup}</span>\n      </p>\n      <p className='lead'>\n        <span>Mobile Number:</span> <span>{phone}</span>\n      </p>\n      <p className='lead'>\n        <span>Email:</span> <span>{email}</span>\n      </p>\n      <p className='lead'>\n        <span>Profession:</span> <span>{profession}</span>\n      </p>\n      <p className='lead'>\n        <span>Bio:</span> <span>{bio}</span>\n      </p>\n      <p className='lead'>\n        <span>Available:</span> <span>{can}</span>\n      </p>\n      <p className='lead'>\n        <span>Address:</span> <span>{thana} - </span>\n        <span>{area}</span>\n      </p>\n    </div>\n  );\n};\n\nProfileAbout.propTypes = {\n  profile: PropTypes.object.isRequired\n};\n\nexport default ProfileAbout;\n","import React, { Fragment, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport Spinner from '../layout/Spinner';\nimport ProfileAbout from './ProfileAbout';\nimport { getCurrentProfileById } from '../../actions/profile';\n\nconst Profile = ({\n  getCurrentProfileById,\n  profile: { profile, loading },\n  auth,\n  match\n}) => {\n  useEffect(() => {\n    getCurrentProfileById(match.params.id);\n  }, [getCurrentProfileById, match.params.id]);\n  return (\n    <Fragment>\n      <div className='container'>\n        {profile === null || loading ? (\n          <Spinner />\n        ) : (\n          <Fragment>\n            {' '}\n            {profile && profile.permission === 'approve' ? (\n              <Fragment>\n                <div className=''>\n                  <ProfileAbout profile={profile} />\n                </div>\n                {auth.isAuthenticated &&\n                  auth.loading === false &&\n                  auth.user._id === profile.user._id && (\n                    <Fragment>\n                      <div style={{ marginTop: '0.5em' }}>\n                        <Link to='/edit-profile' className='btn btn-dark'>\n                          Edit Profile\n                        </Link>\n                      </div>\n                    </Fragment>\n                  )}\n              </Fragment>\n            ) : (\n              <Fragment>\n                {profile && profile.permission === 'request' ? (\n                  <Fragment>\n                    <h1>Your profile is under review by Admin</h1>\n                    <p>You may receive a call from us for security purpose</p>\n                    <p>Please login again to check your status</p>\n                  </Fragment>\n                ) : (\n                  <Fragment>\n                    <h1>Sorry, your profile was rejected by Admin</h1>\n                    <p>\n                      We highly appriciate your interest but you cannot join as\n                      a blood donar\n                    </p>\n                    <small>\n                      Please feel free to post in our Blood Post Box if you need\n                      blood\n                    </small>\n                  </Fragment>\n                )}\n              </Fragment>\n            )}\n          </Fragment>\n        )}\n      </div>\n    </Fragment>\n  );\n};\n\nProfile.propTypes = {\n  getCurrentProfileById: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  profile: state.profile,\n  auth: state.auth\n});\nexport default connect(mapStateToProps, { getCurrentProfileById })(Profile);\n","import React, { Fragment, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport ProfileAbout from './ProfileAbout';\nimport { getMyProfile } from '../../actions/profile';\n\nconst MyProfile = ({ getMyProfile, profile: { profile }, auth }) => {\n  useEffect(() => {\n    getMyProfile();\n  }, [getMyProfile]);\n  return (\n    <Fragment>\n      <div className='container'>\n        {auth.isAuthenticated && auth.user !== null && profile !== null && (\n          <Fragment>\n            {auth.isAuthenticated && profile.permission === 'approve' ? (\n              <Fragment>\n                {profile.bio &&\n                profile.bio !== null &&\n                profile.profession !== null ? (\n                  <Fragment>\n                    {auth.isAuthenticated &&\n                      auth.loading === false &&\n                      auth.user._id === profile.user._id && (\n                        <Fragment>\n                          <div\n                            className='welcome text-deep my-1'\n                            style={{ marginTop: '0.5em' }}\n                          >\n                            <p className='mid'>\n                              <i class='fas fa-user-nurse'></i> Welcome To Blood\n                              Source\n                            </p>\n                            <p className='mid my-1'>\n                              <i class='fas fa-smile'></i> Happy Blood Sharing\n                            </p>\n                          </div>\n                          <div className=''>\n                            <ProfileAbout profile={profile} />\n                          </div>\n                          <div style={{ marginTop: '0.5em' }}>\n                            <Link to='/edit-profile' className='btn btn-dark'>\n                              Edit Profile\n                            </Link>\n                          </div>\n                        </Fragment>\n                      )}\n                  </Fragment>\n                ) : (\n                  <Fragment>\n                    {auth.isAuthenticated &&\n                      auth.loading === false &&\n                      auth.user._id === profile.user._id && (\n                        <Fragment>\n                          <div className='my-1' style={{ marginTop: '0.5em' }}>\n                            <p className='mid text-deep'>\n                              <i class='fas fa-user-nurse'></i> Blood Source এ\n                              আপনাকে স্বাগতম\n                            </p>\n                            <p className='mid text-deep'>\n                              <i class='fas fa-heart'></i> We are proud to have\n                              you\n                            </p>\n                            <p className='mid my-1'>\n                              <i class='fas fa-smile'></i> Happy Blood Sharing\n                            </p>\n                            <Link to='/edit-profile' className='btn btn-dark'>\n                              Complete Profile\n                            </Link>\n                          </div>\n                          <div className=''>\n                            <ProfileAbout profile={profile} />\n                          </div>\n                        </Fragment>\n                      )}\n                  </Fragment>\n                )}\n              </Fragment>\n            ) : (\n              <Fragment>\n                {auth.isAuthenticated && profile.permission === 'request' ? (\n                  <Fragment>\n                    <p className='mid text-deep'>\n                      <i class='fas fa-user-nurse'></i>\n                      রক্ত দানের এই অনন্য প্ল্যাটফর্মটিতে আপনাকে স্বাগতম\n                    </p>\n                    <p className='mid text-deep'>\n                      <i class='fas fa-heart'></i> আমাদের সাথে যুক্ত হওয়ার অসীম\n                      আগ্রহ ও রক্তদানের প্রবল ইচ্ছাকে স্বাগতম জানানোর জন্য\n                      ধন্যবাদ দেয়া ব্যতীত আর কোনো ভাষা আমাদের জানা নেই\n                    </p>\n                    <p className='lead text-deep'>\n                      আমাদের এই মহৎ কাজের পরিবেশটিকে স্বচ্ছ রাখার উদ্দেশ্যে আমরা\n                      প্রাথমিক পর্যায়ে প্রোফাইলগুলো যাচাই করে থাকি। আপনার\n                      প্রোফাইলটি যাচাইয়ের জন্য আমাদের কিছু সময় লাগবে। আপনি হয়তো\n                      আমাদের কাছ থেকে আপনার মোবাইলে কল পেতে পারেন। আপনার\n                      প্রোফাইলের অবস্থা জানতে দয়া করে পরে লগইন করে দেখার জন্য\n                      বিনীত অনুরোধ করা হচ্ছে। সাময়িক অসুবিধার জন্য আন্তরিকভাবে\n                      দুঃখিত\n                    </p>\n                  </Fragment>\n                ) : (\n                  <Fragment>\n                    {auth.isAuthenticated && profile.permission === 'reject' && (\n                      <Fragment>\n                        <h1>Sorry, your profile was rejected by Admin</h1>\n                        <p>\n                          We highly appriciate your interest but you cannot join\n                          as a blood donar\n                        </p>\n                        <small>\n                          Please feel free to post in our Blood Post Box if you\n                          need blood\n                        </small>\n                      </Fragment>\n                    )}\n                  </Fragment>\n                )}\n              </Fragment>\n            )}\n          </Fragment>\n        )}\n      </div>\n    </Fragment>\n  );\n};\n\nMyProfile.propTypes = {\n  getMyProfile: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  profile: state.profile,\n  auth: state.auth\n});\nexport default connect(mapStateToProps, { getMyProfile })(MyProfile);\n","import React, { Fragment, useState, useEffect } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { getCurrentProfileById, createProfile } from '../../actions/profile';\n\nconst initialState = {\n  email: '',\n  profession: '',\n  bloodGroup: '',\n  donateDate: '',\n  facebook: '',\n  bio: '',\n  can: '',\n  phone: '',\n  area: '',\n  thana: '',\n  permission: ''\n};\n\nconst EditProfile = ({\n  profile: { profile, loading },\n  createProfile,\n  getCurrentProfileById,\n  history\n}) => {\n  const [formData, setFormData] = useState(initialState);\n\n  useEffect(() => {\n    if (!profile) getCurrentProfileById();\n    if (!loading) {\n      const profileData = { ...initialState };\n      for (const key in profile) {\n        if (key in profileData) profileData[key] = profile[key];\n      }\n      setFormData(profileData);\n    }\n  }, [loading, getCurrentProfileById, profile]);\n\n  const {\n    email,\n    profession,\n    bloodGroup,\n    donateDate,\n    facebook,\n    bio,\n    can,\n    phone,\n    area,\n    thana\n  } = formData;\n\n  const onChange = e =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const onSubmit = e => {\n    e.preventDefault();\n    createProfile(formData, history, true);\n  };\n  return (\n    <Fragment>\n      <div className='container'>\n        <h1 className='large text-primary'>Edit Your Profile</h1>\n        <p className='lead'>\n          <i className='fas fa-user' /> Edit profile if anything has changed\n        </p>\n        <small>* = required field</small>\n        <form className='form' onSubmit={e => onSubmit(e)}>\n          <div className='form-group'>\n            <input\n              type='number'\n              placeholder='* Mobile Number'\n              name='phone'\n              value={phone}\n              onChange={e => onChange(e)}\n            />\n            <small className='form-text'>\n              Mobile Number will be used for login\n            </small>\n          </div>\n          <div className='form-group'>\n            <select\n              name='bloodGroup'\n              value={bloodGroup}\n              onChange={e => onChange(e)}\n            >\n              <option value='0'>* Select Blood Group</option>\n              <option value='A+'>A+</option>\n              <option value='A-'>A-</option>\n              <option value='B+'>B+</option>\n              <option value='B-'>B-</option>\n              <option value='O+'>O+</option>\n              <option value='O-'>O-</option>\n              <option value='AB+'>AB+</option>\n              <option value='AB-'>AB-</option>\n            </select>\n            <small className='form-text'>Please select correctly</small>\n          </div>\n          <div className='form-group'>\n            <input\n              type='text'\n              placeholder='Email'\n              name='email'\n              value={email}\n              onChange={e => onChange(e)}\n            />\n          </div>\n          <div className='form-group'>\n            <input\n              type='text'\n              placeholder='Your Profession'\n              name='profession'\n              value={profession}\n              onChange={e => onChange(e)}\n            />\n            <small className='form-text'>\n              Please provide your current occupation\n            </small>\n          </div>\n          <div className='form-group'>\n            <input\n              type='text'\n              placeholder='Facebook Link'\n              name='facebook'\n              value={facebook}\n              onChange={e => onChange(e)}\n            />\n            <small className='form-text'>Your Facebook Link</small>\n          </div>\n          <div className='form-group'>\n            <textarea\n              placeholder='A short bio of yourself'\n              name='bio'\n              value={bio}\n              onChange={e => onChange(e)}\n            />\n            <small className='form-text'>Tell us a little about yourself</small>\n          </div>\n          <div className='form-group'>\n            <select name='can' value={can} onChange={e => onChange(e)}>\n              <option value='0'>* Select Availability Status</option>\n              <option value='yes'>Yes</option>\n              <option value='no'>No</option>\n            </select>\n            <small className='form-text'>\n              Tell us if are able to donate blood\n            </small>\n          </div>\n          <div>\n            <h3>Your Address</h3>\n            <div className='form-group'>\n              <input\n                type='text'\n                placeholder='* Current Address'\n                name='area'\n                value={area}\n                onChange={e => onChange(e)}\n              />\n              <small className='form-text'>\n                Eg: 12-10, House: 8, Road: 12, Taltola\n              </small>\n            </div>\n            <div className='form-group'>\n              <select name='thana' value={thana} onChange={e => onChange(e)}>\n                <option value='0'>* Thana</option>\n                <option value='Adabar'>Adabar</option>\n                <option value='Azampur'>Azampur</option>\n                <option value='Badda'>Badda</option>\n                <option value='Bangsal'>Bangsal</option>\n                <option value='Bimanbandar'>Bimanbandar</option>\n                <option value='Cantonment'>Cantonment</option>\n                <option value='Chowkbazar'>Chowkbazar</option>\n                <option value='Darus Salam'>Darus Salam</option>\n                <option value='Demra'>Demra</option>\n                <option value='Dhanmondi'>Dhanmondi</option>\n                <option value='Gendaria'>Gendaria</option>\n                <option value='Gulshan'>Gulshan</option>\n                <option value='Hazaribagh'>Hazaribagh</option>\n                <option value='Kadamtali'>Kadamtali</option>\n                <option value='Kafrul'>Kafrul</option>\n                <option value='Kalabagan'>Kalabagan</option>\n                <option value='Kamrangirchar'>Kamrangirchar</option>\n                <option value='Khilgaon'>Khilgaon</option>\n                <option value='Khilkhet'>Khilkhet</option>\n                <option value='Kotwali'>Kotwali</option>\n                <option value='Lalbagh'>Lalbagh</option>\n                <option value='Mirpur Model'>Mirpur Model</option>\n                <option value='Mohammadpur'>Mohammadpur</option>\n                <option value='Motijheel'>Motijheel</option>\n                <option value='New Market'>New Market</option>\n                <option value='Pallabi'>Pallabi</option>\n                <option value='Paltan'>Paltan</option>\n                <option value='Panthapath'>Panthapath</option>\n                <option value='Ramna'>Ramna</option>\n                <option value='Rampura'>Rampura</option>\n                <option value='Sabujbagh'>Sabujbagh</option>\n                <option value='Shah Ali'>Shah Ali</option>\n                <option value='Shahbag'>Shahbag</option>\n                <option value='Sher-e-Bangla Nagar'>Sher-e-Bangla Nagar</option>\n                <option value='Shyampur'>Shyampur</option>\n                <option value='Sutrapur'>Sutrapur</option>\n                <option value='Tejgaon Industrial Area'>\n                  Tejgaon Industrial Area\n                </option>\n                <option value='Tejgaon'>Tejgaon</option>\n                <option value='Turag'>Turag</option>\n                <option value='Uttar Khan'>Uttar Khan</option>\n                <option value='Uttara'>Uttara</option>\n                <option value='Vatara'>Vatara</option>\n                <option value='Wari'>Wari</option>\n              </select>\n              <small className='form-text'>Please select correctly</small>\n            </div>\n          </div>\n          <input type='submit' className='btn btn-primary my-1' />\n          <Link className='btn btn-light my-1' to='/profile/me'>\n            Go Back\n          </Link>\n        </form>\n      </div>\n    </Fragment>\n  );\n};\n\nEditProfile.propTypes = {\n  createProfile: PropTypes.func.isRequired,\n  getCurrentProfileById: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  profile: state.profile\n});\n\nexport default connect(mapStateToProps, {\n  createProfile,\n  getCurrentProfileById\n})(withRouter(EditProfile));\n","import React, { Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst Admin = ({ auth: { user } }) => {\n  return (\n    <Fragment>\n      {user && user.email === 'bhadrad4@gmail.com' && (\n        <Fragment>\n          <div className='container'>\n            <h1 className='large text-primary'>Dashboard</h1>\n            <p className='lead'>\n              <i className='fas fa-user'></i> Welcome Mr. Admin\n            </p>\n\n            <div className='my-2'>\n              <Link to={`/customers`} className='btn btn-primary'>\n                Pending Requests\n              </Link>\n            </div>\n            <div className='my-2'>\n              <Link to={`/users`} className='btn btn-primary'>\n                Approved Users\n              </Link>\n            </div>\n          </div>\n        </Fragment>\n      )}\n    </Fragment>\n  );\n};\n\nAdmin.propTypes = {\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps)(Admin);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst CustomerItem = ({ customer: { _id, name, email, phone } }) => {\n  return (\n    <div className='profile bg-light'>\n      <div>\n        <h2>{name}</h2>\n        <p>{email}</p>\n        <p className='my-1'>{phone}</p>\n        <Link to={`/customer/${_id}`} className='btn btn-primary'>\n          View User\n        </Link>\n      </div>\n    </div>\n  );\n};\n\nCustomerItem.propTypes = {\n  customer: PropTypes.object.isRequired\n};\n\nexport default CustomerItem;\n","import React, { Fragment, useEffect } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Spinner from '../../layout/Spinner';\nimport { getCustomers } from '../../../actions/admin';\nimport CustomerItem from './CustomerItem';\n\nconst Customers = ({\n  getCustomers,\n  admin: { customers, loading },\n  auth: { user, isAuthenticated }\n}) => {\n  useEffect(() => {\n    getCustomers();\n  }, [getCustomers]);\n\n  return (\n    <Fragment>\n      <div className='container'>\n        {isAuthenticated === false && <Redirect to='/' />}\n        <Fragment>\n          {user && user.email === 'bhadrad4@gmail.com' && (\n            <Fragment>\n              {loading ? (\n                <Spinner />\n              ) : (\n                <Fragment>\n                  <h1 className='large text-primary'>Customers</h1>\n                  <p className='lead'>\n                    <i className='fab fa-connectdevelop' /> New People who want\n                    to join\n                  </p>\n                  <Fragment>\n                    {customers.length > 0 ? (\n                      <Fragment>\n                        {customers.map(customer => (\n                          <CustomerItem\n                            key={customer._id}\n                            customer={customer}\n                          />\n                        ))}\n                      </Fragment>\n                    ) : (\n                      <Fragment>\n                        <h4>No profiles found to join...</h4>\n                      </Fragment>\n                    )}\n                  </Fragment>\n                </Fragment>\n              )}\n              <Link to={'/admin'} className='btn btn-primary'>\n                Admin Page\n              </Link>\n            </Fragment>\n          )}\n        </Fragment>\n      </div>\n    </Fragment>\n  );\n};\n\nCustomers.propTypes = {\n  admin: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n  getCustomers: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  admin: state.admin\n});\n\nexport default connect(mapStateToProps, { getCustomers })(Customers);\n","import axios from 'axios';\nimport { setAlert } from './alert';\n\nimport {\n  GET_CUSTOMER,\n  GET_CUSTOMERS,\n  GET_USER,\n  GET_USERS,\n  PROFILE_ERROR\n} from './types';\n\nexport const getCustomerById = customerId => async dispatch => {\n  try {\n    const res = await axios.get(`/api/admin/customer/${customerId}`);\n\n    dispatch({\n      type: GET_CUSTOMER,\n      payload: res.data\n    });\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status }\n    });\n  }\n};\n\nexport const getUserById = userId => async dispatch => {\n  try {\n    const res = await axios.get(`/api/admin/user/${userId}`);\n\n    dispatch({\n      type: GET_USER,\n      payload: res.data\n    });\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status }\n    });\n  }\n};\n\nexport const getCustomers = () => async dispatch => {\n  try {\n    const res = await axios.get('/api/admin/customers');\n\n    dispatch({\n      type: GET_CUSTOMERS,\n      payload: res.data\n    });\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status }\n    });\n  }\n};\n\nexport const getUsers = () => async dispatch => {\n  try {\n    const res = await axios.get('/api/admin/users');\n\n    dispatch({\n      type: GET_USERS,\n      payload: res.data\n    });\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status }\n    });\n  }\n};\n\nexport const approveCustomer = (customerId, history) => async dispatch => {\n  try {\n    const res = await axios.get(`/api/admin/approveCustomer/${customerId}`);\n\n    dispatch({\n      type: GET_CUSTOMER,\n      payload: res.data\n    });\n\n    dispatch(setAlert('User has been Approved Successfully', 'success'));\n    history.push('/customers');\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status }\n    });\n  }\n};\n\nexport const rejectCustomer = (customerId, history) => async dispatch => {\n  try {\n    const res = await axios.get(`/api/admin/rejectCustomer/${customerId}`);\n\n    dispatch({\n      type: GET_CUSTOMER,\n      payload: res.data\n    });\n\n    dispatch(setAlert('User has been Rejected Successfully', 'danger'));\n    history.push('/customers');\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status }\n    });\n  }\n};\n\nexport const deleteAccount = userId => async dispatch => {\n  if (window.confirm('Are you sure? This can NOT be undone!')) {\n    try {\n      await axios.delete(`/api/admin/${userId}`);\n\n      dispatch(setAlert('Account has been permanantly deleted', 'success'));\n    } catch (err) {\n      const errors = err.response.data.errors;\n\n      if (errors) {\n        errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n      }\n      dispatch({\n        type: PROFILE_ERROR,\n        payload: { msg: err.response.statusText, status: err.response.status }\n      });\n    }\n  }\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst CustomerAbout = ({\n  customer: {\n    profession,\n    bio,\n    donateDate,\n    can,\n    facebook,\n    bloodGroup,\n    email,\n    area,\n    thana,\n    user: { phone, name }\n  }\n}) => {\n  return (\n    <div className='profile-top bg-primary p-2'>\n      <div>\n        <p>\n          <span className='large'> {name}</span>{' '}\n          <span>\n            <a href={facebook} target='_blank' rel='noopener noreferrer'>\n              <i className='fab fa-facebook fa-2x' />\n            </a>\n          </span>\n        </p>\n      </div>\n      <br />\n      <p className='lead'>\n        <span>Blood Group:</span> <span>{bloodGroup}</span>\n      </p>\n      <p className='lead'>\n        <span>Mobile Number:</span> <span>{phone}</span>\n      </p>\n      <p className='lead'>\n        <span>Email:</span> <span>{email}</span>\n      </p>\n      <p className='lead'>\n        <span>Profession:</span> <span>{profession}</span>\n      </p>\n      <p className='lead'>\n        <span>Bio:</span> <span>{bio}</span>\n      </p>\n      <p className='lead'>\n        <span>Last Donate Time: </span> <span>{donateDate}</span>\n      </p>\n      <p className='lead'>\n        <span>Available:</span> <span>{can}</span>\n      </p>\n      <p className='lead'>\n        <span>Address:</span> <span>{thana} - </span>\n        <span>{area}</span>\n      </p>\n    </div>\n  );\n};\n\nCustomerAbout.propTypes = {\n  customer: PropTypes.object.isRequired\n};\n\nexport default CustomerAbout;\n","import React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Spinner from '../../layout/Spinner';\nimport CustomerAbout from './CustomerAbout';\nimport {\n  approveCustomer,\n  rejectCustomer,\n  getCustomerById\n} from '../../../actions/admin';\n\nconst Customer = ({\n  auth: { user, isAuthenticated },\n  approveCustomer,\n  rejectCustomer,\n  getCustomerById,\n  admin: { customer, loading },\n  match,\n  history\n}) => {\n  const onApprove = e => {\n    e.preventDefault();\n    approveCustomer(match.params.id, history);\n  };\n\n  const onReject = e => {\n    e.preventDefault();\n    rejectCustomer(match.params.id, history);\n  };\n\n  useEffect(() => {\n    getCustomerById(match.params.id);\n  }, [getCustomerById, match.params.id]);\n\n  return (\n    <Fragment>\n      <div className='container'>\n        {isAuthenticated === false && <Redirect to='/' />}\n        <Fragment>\n          {user && user.email === 'bhadrad4@gmail.com' && (\n            <Fragment>\n              {customer === null || loading ? (\n                <Spinner />\n              ) : (\n                <Fragment>\n                  {customer.permission === 'request' && (\n                    <Fragment>\n                      <div className='profile-grid my-1'>\n                        <CustomerAbout customer={customer} />\n                      </div>{' '}\n                      <button\n                        className='btn btn-primary'\n                        onClick={e => onApprove(e)}\n                      >\n                        Approve\n                      </button>\n                      <button\n                        className='btn btn-danger'\n                        onClick={e => onReject(e)}\n                      >\n                        Reject\n                      </button>\n                    </Fragment>\n                  )}\n                </Fragment>\n              )}\n              <Link to='/customers' className='btn btn-light'>\n                Back To Customers\n              </Link>\n            </Fragment>\n          )}\n        </Fragment>\n      </div>\n    </Fragment>\n  );\n};\n\nCustomer.propTypes = {\n  approveCustomer: PropTypes.func.isRequired,\n  rejectCustomer: PropTypes.func.isRequired,\n  getCustomerById: PropTypes.func.isRequired,\n  customer: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  admin: state.admin,\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, {\n  approveCustomer,\n  rejectCustomer,\n  getCustomerById\n})(Customer);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst UserItem = ({ adminUser: { _id, name, email, phone } }) => {\n  return (\n    <div className='profile bg-light'>\n      <div>\n        <h2>{name}</h2>\n        <p>{email}</p>\n        <p className='my-1'>{phone}</p>\n        <Link to={`/user/${_id}`} className='btn btn-primary'>\n          View User\n        </Link>\n      </div>\n    </div>\n  );\n};\n\nUserItem.propTypes = {\n  adminUser: PropTypes.object.isRequired\n};\n\nexport default UserItem;\n","import React, { Fragment, useEffect } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Spinner from '../../layout/Spinner';\nimport { getUsers } from '../../../actions/admin';\nimport UserItem from './UserItem';\n\nconst Users = ({\n  getUsers,\n  admin: { adminUsers, loading },\n  auth: { user, isAuthenticated }\n}) => {\n  useEffect(() => {\n    getUsers();\n  }, [getUsers]);\n\n  return (\n    <Fragment>\n      <div className='container'>\n        {isAuthenticated === false && <Redirect to='/' />}\n        <Fragment>\n          {user && user.email === 'bhadrad4@gmail.com' && (\n            <Fragment>\n              {loading ? (\n                <Spinner />\n              ) : (\n                <Fragment>\n                  <h1 className='large text-primary'>Users</h1>\n                  <p className='lead'>\n                    <i className='fab fa-connectdevelop' /> New Users who have\n                    joined\n                  </p>\n                  <Fragment>\n                    {adminUsers.length > 0 ? (\n                      <Fragment>\n                        {adminUsers.map(adminUser => (\n                          <UserItem key={adminUser._id} adminUser={adminUser} />\n                        ))}\n                      </Fragment>\n                    ) : (\n                      <Fragment>\n                        <h4>No profiles found to join...</h4>\n                      </Fragment>\n                    )}\n                  </Fragment>\n                </Fragment>\n              )}\n              <Link to={'/admin'} className='btn btn-primary'>\n                Admin Page\n              </Link>\n            </Fragment>\n          )}\n        </Fragment>\n      </div>\n    </Fragment>\n  );\n};\n\nUsers.propTypes = {\n  admin: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n  getUsers: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  admin: state.admin\n});\n\nexport default connect(mapStateToProps, { getUsers })(Users);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst UserAbout = ({\n  adminUser: {\n    profession,\n    facebook,\n    bio,\n    donateDate,\n    can,\n    bloodGroup,\n    email,\n    area,\n    thana,\n    user: { phone, name }\n  }\n}) => {\n  return (\n    <div className='profile-top bg-dark'>\n      <div>\n        <p>\n          <span className='large'> {name}</span>{' '}\n          <span>\n            <a href={facebook} target='_blank' rel='noopener noreferrer'>\n              <i className='fab fa-facebook fa-2x' />\n            </a>\n          </span>\n        </p>\n      </div>\n      <br />\n      <p className='lead'>\n        <span>Blood Group:</span> <span>{bloodGroup}</span>\n      </p>\n      <p className='lead'>\n        <span>Mobile Number:</span> <span>{phone}</span>\n      </p>\n      <p className='lead'>\n        <span>Email:</span> <span>{email}</span>\n      </p>\n      <p className='lead'>\n        <span>Profession:</span> <span>{profession}</span>\n      </p>\n      <p className='lead'>\n        <span>Bio:</span> <span>{bio}</span>\n      </p>\n      <p className='lead'>\n        <span>Last Donate Time: </span> <span>{donateDate}</span>\n      </p>\n      <p className='lead'>\n        <span>Available:</span> <span>{can}</span>\n      </p>\n      <p className='lead'>\n        <span>Address:</span> <span>{thana} - </span>\n        <span>{area}</span>\n      </p>\n    </div>\n  );\n};\n\nUserAbout.propTypes = {\n  adminUser: PropTypes.object.isRequired\n};\n\nexport default UserAbout;\n","import React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Spinner from '../../layout/Spinner';\nimport UserAbout from './UserAbout';\nimport { getUserById } from '../../../actions/admin';\n\nconst User = ({\n  auth: { user, isAuthenticated },\n  getUserById,\n  admin: { adminUser, loading },\n  match\n}) => {\n  useEffect(() => {\n    getUserById(match.params.id);\n  }, [getUserById, match.params.id]);\n\n  return (\n    <Fragment>\n      <div className='container'>\n        {isAuthenticated === false && <Redirect to='/' />}\n        <Fragment>\n          {user && user.email === 'bhadrad4@gmail.com' && (\n            <Fragment>\n              {adminUser === null || loading ? (\n                <Spinner />\n              ) : (\n                <Fragment>\n                  <div className='profile-grid my-1'>\n                    <UserAbout adminUser={adminUser} />\n                  </div>{' '}\n                </Fragment>\n              )}\n              <Link to='/users' className='btn btn-light'>\n                Back To Users\n              </Link>\n            </Fragment>\n          )}\n        </Fragment>\n      </div>\n    </Fragment>\n  );\n};\n\nUser.propTypes = {\n  getUserById: PropTypes.func.isRequired,\n  admin: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  admin: state.admin,\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, {\n  getUserById\n})(User);\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Redirect, Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { addPost } from '../../actions/post';\n\nconst AddPost = ({ addPost, history, auth: { isAuthenticated } }) => {\n  const [formData, setFormData] = useState({\n    text: '',\n    name: '',\n    phone: '',\n    bloodGroup: '',\n    area: '',\n    thana: '',\n    clinicName: ''\n  });\n\n  const { text, name, phone, bloodGroup, area, thana, clinicName } = formData;\n\n  const onChange = e =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const onSubmit = e => {\n    e.preventDefault();\n    addPost(formData, history);\n  };\n\n  if (isAuthenticated) {\n    return <Redirect to='/posts/myPost' />;\n  }\n\n  return (\n    <div className='container post-form'>\n      <div className='welcome text-deep my-1' style={{ marginTop: '0.5em' }}>\n        <p className='mid'>\n          <i className='fas fa-user'></i> Blood Source এ স্বাগতম\n        </p>\n        <p className='lead my-1'>\n          <i class='fas fa-heart'></i> আমরা রক্তের প্রয়োজনে আপনার পাশে দাঁড়াতে\n          পেরে গর্বিত\n        </p>\n        <p className='lead my-1'>\n          <i class='fas fa-smile'></i> দয়া করে নিচের তথ্যগুলো পূরণ করুন\n        </p>\n      </div>\n      <form className='form my-1' onSubmit={e => onSubmit(e)}>\n        <textarea\n          name='text'\n          cols='30'\n          rows='4'\n          placeholder='* আপনার রক্তের কেনো প্রয়োজন?'\n          value={text}\n          onChange={e => onChange(e)}\n          required\n        />\n        <div className='form-group'>\n          <select\n            name='bloodGroup'\n            value={bloodGroup}\n            onChange={e => onChange(e)}\n          >\n            <option value='0'>* রক্তের গ্রুপ নির্বাচন করুন</option>\n            <option value='A+'>A+</option>\n            <option value='A-'>A-</option>\n            <option value='B+'>B+</option>\n            <option value='B-'>B-</option>\n            <option value='O+'>O+</option>\n            <option value='O-'>O-</option>\n            <option value='AB+'>AB+</option>\n            <option value='AB-'>AB-</option>\n          </select>\n          <small className='form-text'>যে রক্তের গ্রুপ আপনার দরকার</small>\n        </div>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='* আপনার নাম'\n            name='name'\n            value={name}\n            onChange={e => onChange(e)}\n          />\n          <small className='form-text'>সম্পূর্ণ নাম ব্যবহার করুন</small>\n        </div>\n        <div className='form-group'>\n          <input\n            type='number'\n            placeholder='* মোবাইল নাম্বার'\n            name='phone'\n            value={phone}\n            onChange={e => onChange(e)}\n          />\n          <small className='form-text'>\n            এই মোবাইল নম্বর টি আপনার Login Id হিসেবে গণ্য হবে\n          </small>\n        </div>\n        <div>\n          <h3>Address</h3>\n          <div className='form-group'>\n            <input\n              type='text'\n              placeholder='* হাসপাতালের/ক্লিনিক এর নাম'\n              name='clinicName'\n              value={clinicName}\n              onChange={e => onChange(e)}\n            />\n            <small className='form-text'>রোগী যেই হাসপাতালে ভর্তি আছে</small>\n          </div>\n          <div className='form-group'>\n            <input\n              type='text'\n              placeholder='* হাসপাতালের ঠিকানা'\n              name='area'\n              value={area}\n              onChange={e => onChange(e)}\n            />\n            <small className='form-text'>\n              যেমনঃ বাড়ি-১০, রোড-১২, ব্লক-৮ ইত্যাদি\n            </small>\n          </div>\n          <div className='form-group'>\n            <select name='thana' value={thana} onChange={e => onChange(e)}>\n              <option value='0'>* থানা</option>\n              <option value='Adabar'>Adabar</option>\n              <option value='Azampur'>Azampur</option>\n              <option value='Badda'>Badda</option>\n              <option value='Bangsal'>Bangsal</option>\n              <option value='Bimanbandar'>Bimanbandar</option>\n              <option value='Cantonment'>Cantonment</option>\n              <option value='Chowkbazar'>Chowkbazar</option>\n              <option value='Darus Salam'>Darus Salam</option>\n              <option value='Demra'>Demra</option>\n              <option value='Dhanmondi'>Dhanmondi</option>\n              <option value='Gendaria'>Gendaria</option>\n              <option value='Gulshan'>Gulshan</option>\n              <option value='Hazaribagh'>Hazaribagh</option>\n              <option value='Kadamtali'>Kadamtali</option>\n              <option value='Kafrul'>Kafrul</option>\n              <option value='Kalabagan'>Kalabagan</option>\n              <option value='Kamrangirchar'>Kamrangirchar</option>\n              <option value='Khilgaon'>Khilgaon</option>\n              <option value='Khilkhet'>Khilkhet</option>\n              <option value='Kotwali'>Kotwali</option>\n              <option value='Lalbagh'>Lalbagh</option>\n              <option value='Mirpur Model'>Mirpur Model</option>\n              <option value='Mohammadpur'>Mohammadpur</option>\n              <option value='Motijheel'>Motijheel</option>\n              <option value='New Market'>New Market</option>\n              <option value='Pallabi'>Pallabi</option>\n              <option value='Paltan'>Paltan</option>\n              <option value='Panthapath'>Panthapath</option>\n              <option value='Ramna'>Ramna</option>\n              <option value='Rampura'>Rampura</option>\n              <option value='Sabujbagh'>Sabujbagh</option>\n              <option value='Shah Ali'>Shah Ali</option>\n              <option value='Shahbag'>Shahbag</option>\n              <option value='Sher-e-Bangla Nagar'>Sher-e-Bangla Nagar</option>\n              <option value='Shyampur'>Shyampur</option>\n              <option value='Sutrapur'>Sutrapur</option>\n              <option value='Tejgaon Industrial Area'>\n                Tejgaon Industrial Area\n              </option>\n              <option value='Tejgaon'>Tejgaon</option>\n              <option value='Turag'>Turag</option>\n              <option value='Uttar Khan'>Uttar Khan</option>\n              <option value='Uttara'>Uttara</option>\n              <option value='Vatara'>Vatara</option>\n              <option value='Wari'>Wari</option>\n            </select>\n            <small className='form-text'>সঠিক থানা বাছুন</small>\n          </div>\n        </div>\n        <div>\n          <small className='form-text'>\n            By clicking Submit, you agree to our{' '}\n            <Link to='/termsandconditions'>Terms</Link>,{' '}\n            <Link to='/termsandconditions'>Data Policy</Link> and\n            <Link to='/termsandconditions'> Cookie</Link> Policy. You may\n            receive SMS notifications from us and can opt out at any time.\n          </small>\n        </div>\n        <input type='submit' className='btn btn-dark my-1' value='Submit' />\n      </form>\n    </div>\n  );\n};\n\nAddPost.propTypes = {\n  addPost: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, { addPost })(AddPost);\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport Moment from 'react-moment';\nimport { connect } from 'react-redux';\nimport { addLike } from '../../actions/post';\n\nconst PostAbout = ({\n  auth: { isAuthenticated },\n  addLike,\n  post: {\n    _id,\n    text,\n    comments,\n    date,\n    needer,\n    bloodGroup,\n    thana,\n    clinicName,\n    area\n  },\n  showActions\n}) => {\n  return (\n    <Fragment>\n      {isAuthenticated ? (\n        <Fragment>\n          <div className='post text-deep bg-white p-1 my-1'>\n            <p className='lead my-1'>\n              <i class='fas fa-portrait' /> {needer.name}\n            </p>\n            <p className='lead my-1'>\n              <i class='fas fa-tint' /> {bloodGroup}\n            </p>\n            <p className='lead my-1'>\n              <i class='fas fa-mobile-alt' /> {needer.phone}\n            </p>\n            <p className='my-1'>{text}</p>\n            <p className='lead my-1'>\n              <i class='fas fa-map-marker-alt'></i> {thana}\n            </p>\n            <p className='my-1'>{clinicName}</p>\n            <p className='my-1'>{area}</p>\n            <p className='post-date'>\n              Posted on <Moment format='YYYY/MM/DD'>{date}</Moment>\n            </p>\n          </div>\n        </Fragment>\n      ) : (\n        <Fragment>\n          <div className='post bg-white my-1'>\n            <p className='lead text-deep my-1'>\n              <i class='fas fa-portrait' /> {needer.name}\n            </p>\n            <p className='lead my-1'>\n              <i class='fas fa-tint' /> {bloodGroup}\n            </p>\n            <p className='my-1'>{text}</p>\n            <p className='lead my-1'>\n              <i class='fas fa-map-marker-alt'></i> {thana}\n            </p>\n            <p className='my-1'>\n              <i class='fas fa-hospital'></i> <span>{clinicName} - </span>\n              <span>{area}</span>\n            </p>\n            <p className='post-date'>\n              Posted on <Moment format='YYYY/MM/DD'>{date}</Moment>\n            </p>\n          </div>\n        </Fragment>\n      )}\n    </Fragment>\n  );\n};\n\nPostAbout.defaultProps = {\n  showActions: true\n};\n\nPostAbout.propTypes = {\n  addLike: PropTypes.func.isRequired,\n  post: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n  showActions: PropTypes.bool\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, { addLike })(PostAbout);\n","import React, { useEffect, Fragment } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Moment from 'react-moment';\n//import { deleteComment } from '../../actions/post';\n\nconst CommentItem = ({\n  post,\n  comment: { text, name, donar, date },\n  auth: { isAuthenticated, needer }\n}) => {\n  return (\n    <Fragment>\n      <div className='post bg-white p-1 my-1'>\n        <div>\n          {donar && donar !== null ? (\n            <Fragment>\n              {isAuthenticated &&\n              needer !== null &&\n              needer._id === post.needer._id ? (\n                <Fragment>\n                  <p className='lead my-1'>\n                    <i class='fas fa-user-check' />{' '}\n                    <Link to={`/profile/donorId/${donar}`}>{name}</Link>\n                  </p>\n                </Fragment>\n              ) : (\n                <Fragment>\n                  <p className='lead my-1'>\n                    <i class='fas fa-user-check' /> {name}\n                  </p>\n                </Fragment>\n              )}\n            </Fragment>\n          ) : (\n            <Fragment>\n              <p className='lead my-1'>\n                <i class='fas fa-portrait' /> {name}\n              </p>\n            </Fragment>\n          )}\n          <p className='my-1'>{text}</p>\n          <p className='post-date'>\n            Posted on <Moment format='YYYY/MM/DD'>{date}</Moment>\n          </p>\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nCommentItem.propTypes = {\n  post: PropTypes.object.isRequired,\n  postId: PropTypes.string.isRequired,\n  comment: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps)(CommentItem);\n","import React, { useState, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { addComment } from '../../../actions/post';\n\nconst CommentForm = ({\n  postId,\n  addComment,\n  auth: { isAuthenticated, user, needer }\n}) => {\n  const [comment, setComment] = useState({\n    name: '',\n    donar: '',\n    text: ''\n  });\n\n  if (isAuthenticated && user !== null && needer === null) {\n    comment.name = user.name;\n    comment.donar = user._id;\n  }\n  if (isAuthenticated && needer !== null && needer !== null) {\n    comment.name = needer.name;\n  }\n\n  const { name, text } = comment;\n\n  const onChange = e => {\n    setComment({ ...comment, [e.target.name]: e.target.value });\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n    addComment(postId, comment);\n    setComment({\n      name: '',\n      text: ''\n    });\n  };\n\n  return (\n    <div className='post-form'>\n      <p className='lead text-deep'>\n        {' '}\n        <i class='fas fa-comment-alt' /> Comments\n      </p>\n      {!isAuthenticated ? (\n        <Fragment>\n          <form className='form my-1' onSubmit={e => onSubmit(e)}>\n            <div className='form-group'>\n              <textarea\n                name='text'\n                cols='30'\n                rows='2'\n                placeholder='Leave your comment'\n                value={text}\n                onChange={e => onChange(e)}\n                required\n              />\n            </div>\n            <div className='form-group'>\n              <input\n                type='text'\n                cols='20'\n                placeholder='Your Name'\n                name='name'\n                value={name}\n                onChange={e => onChange(e)}\n              />\n            </div>\n            <input\n              type='submit'\n              className='btn btn-danger my-1'\n              value='Submit'\n            />\n          </form>\n        </Fragment>\n      ) : (\n        <Fragment>\n          {isAuthenticated && user !== null && needer === null && (\n            <Fragment>\n              <form className='form my-1' onSubmit={e => onSubmit(e)}>\n                <div className='form-group'>\n                  <textarea\n                    name='text'\n                    cols='30'\n                    rows='2'\n                    placeholder='Leave your comment'\n                    value={text}\n                    onChange={e => onChange(e)}\n                    required\n                  />\n                </div>\n                <input\n                  type='submit'\n                  className='btn btn-danger my-1'\n                  value='Submit'\n                />\n              </form>\n            </Fragment>\n          )}\n          {isAuthenticated && needer !== null && needer !== null && (\n            <Fragment>\n              <form className='form my-1' onSubmit={e => onSubmit(e)}>\n                <div className='form-group'>\n                  <textarea\n                    name='text'\n                    cols='30'\n                    rows='2'\n                    placeholder='Leave your comment'\n                    value={text}\n                    onChange={e => onChange(e)}\n                    required\n                  />\n                </div>\n                <input\n                  type='submit'\n                  className='btn btn-danger my-1'\n                  value='Submit'\n                />\n              </form>\n            </Fragment>\n          )}\n        </Fragment>\n      )}\n    </div>\n  );\n};\n\nCommentForm.propTypes = {\n  auth: PropTypes.object.isRequired,\n  addComment: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, { addComment })(CommentForm);\n","import React, { Fragment, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { getPostById } from '../../actions/post';\nimport Spinner from '../layout/Spinner';\nimport PostAbout from './PostAbout';\nimport CommentItem from './comments/CommentItem';\nimport CommentForm from './comments/CommentForm';\n\nconst Post = ({ getPostById, post: { post }, match }) => {\n  useEffect(() => {\n    getPostById(match.params.id);\n  }, [getPostById, match.params.id]);\n\n  return (\n    <Fragment>\n      <div className='container'>\n        {post && post !== null && post._id === match.params.id ? (\n          <Fragment>\n            <p className='large text-deep my-1'>\n              <i class='fas fa-file-medical'></i> Application\n            </p>\n            <PostAbout post={post} showActions={false} />\n            <CommentForm postId={post._id} />\n            <div className='comments'>\n              {post.comments.map(comment => (\n                <CommentItem\n                  key={comment._id}\n                  comment={comment}\n                  post={post}\n                  postId={post._id}\n                />\n              ))}\n            </div>\n          </Fragment>\n        ) : (\n          <Fragment>\n            <Spinner />\n          </Fragment>\n        )}\n      </div>\n    </Fragment>\n  );\n};\n\nPost.propTypes = {\n  getPostById: PropTypes.func.isRequired,\n  post: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  post: state.post\n});\n\nexport default connect(mapStateToProps, { getPostById })(Post);\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport Moment from 'react-moment';\nimport { connect } from 'react-redux';\nimport { addLike } from '../../actions/post';\n\nconst PostItem = ({\n  auth: { isAuthenticated },\n  post: { _id, text, comments, date, needer, bloodGroup, thana },\n  showActions\n}) => {\n  return (\n    <Fragment>\n      {isAuthenticated ? (\n        <Fragment>\n          <div className='posts bg-firm my-3'>\n            <p className='lead my-1'>\n              <i class='fas fa-portrait' /> {needer.name}\n            </p>\n            <p className='lead my-1'>\n              <i class='fas fa-tint' /> {bloodGroup}\n            </p>\n            <p className='lead my-1'>\n              <i class='fas fa-map-marker-alt'></i> {thana}\n            </p>\n            <p className='my-1'>{text}</p>\n            <p className='post-date'>\n              Posted on <Moment format='YYYY/MM/DD'>{date}</Moment>\n            </p>\n            {showActions && (\n              <Fragment>\n                <Link to={`/posts/postId/${_id}`} className='btn btn-danger'>\n                  Discussion{' '}\n                  {comments.length > 0 && (\n                    <span className='comment-count'>{comments.length}</span>\n                  )}\n                </Link>\n              </Fragment>\n            )}\n          </div>\n        </Fragment>\n      ) : (\n        <Fragment>\n          <div className='posts bg-firm my-3'>\n            <p className='lead my-1'>\n              <i class='fas fa-portrait' /> {needer.name}\n            </p>\n            <p className='lead my-1'>\n              <i class='fas fa-tint' /> {bloodGroup}\n            </p>\n            <p className='lead my-1'>\n              <i class='fas fa-map-marker-alt'></i> {thana}\n            </p>\n            <p className='my-1'>{text}</p>\n            <p className='post-date'>\n              Posted on <Moment format='YYYY/MM/DD'>{date}</Moment>\n            </p>\n            {showActions && (\n              <Fragment>\n                <Link to={`/posts/postId/${_id}`} className='btn btn-danger'>\n                  Discussion{' '}\n                  {comments.length > 0 && (\n                    <span className='comment-count'>{comments.length}</span>\n                  )}\n                </Link>\n              </Fragment>\n            )}\n          </div>\n        </Fragment>\n      )}\n    </Fragment>\n  );\n};\n\nPostItem.defaultProps = {\n  showActions: true\n};\n\nPostItem.propTypes = {\n  addLike: PropTypes.func.isRequired,\n  post: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n  showActions: PropTypes.bool\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, { addLike })(PostItem);\n","import React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport PostItem from './PostItem';\nimport { getPosts } from '../../actions/post';\n\nconst Posts = ({ getPosts, post: { posts, loading } }) => {\n  useEffect(() => {\n    getPosts();\n  }, [getPosts]);\n\n  return (\n    <Fragment>\n      <div className='container'>\n        {loading ? (\n          <Spinner />\n        ) : (\n          <Fragment>\n            <p className='welcome mid my-1 text-deep'>\n              <i className='fas fa-user'></i> Welcome to Blood Source\n            </p>\n            <p className='mid text-deep'>\n              <i class='fas fa-file-medical'></i> Applications\n            </p>\n\n            <div>\n              {posts.map(post => (\n                <div>\n                  <PostItem key={post._id} post={post} />\n                </div>\n              ))}\n            </div>\n          </Fragment>\n        )}\n      </div>\n    </Fragment>\n  );\n};\n\nPosts.propTypes = {\n  getPosts: PropTypes.func.isRequired,\n  post: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  post: state.post\n});\n\nexport default connect(mapStateToProps, { getPosts })(Posts);\n","import React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { getMyDonars } from '../../actions/profile';\nimport { getPostById } from '../../actions/post';\nimport Spinner from '../layout/Spinner';\n\nconst Donars = ({\n  profile: { profiles, profile, loading },\n  auth: { isAuthenticated, needer, user },\n  post: { post },\n  getMyDonars,\n  getPostById,\n  match\n}) => {\n  useEffect(() => {\n    getMyDonars(match.params.id);\n    getPostById(match.params.id);\n  }, [getMyDonars, getPostById, match.params.id]);\n\n  return (\n    <Fragment>\n      <div className='container'>\n        {loading ? (\n          <Fragment>\n            <Spinner />\n          </Fragment>\n        ) : (\n          <Fragment>\n            {' '}\n            {isAuthenticated &&\n            needer !== null &&\n            user === null &&\n            post !== null ? (\n              <Fragment>\n                {' '}\n                {profiles && profiles.length > 0 ? (\n                  <Fragment>\n                    <p className='mid text-red'>\n                      <i class='fas fa-user-nurse'></i> যারা এই মুহূর্তে রক্ত\n                      দিতে প্রস্তুত\n                    </p>\n                    <p className='mid text-deep'>\n                      <i class='fas fa-map-marker-alt'></i> আপনার কাছাকাছি\n                    </p>\n                    {profiles.map(profile => (\n                      <Fragment>\n                        {profile.can === 'yes' && profile.thana === post.thana && (\n                          <Fragment>\n                            <div className='posts bg-white p-1 my-2'>\n                              <p className='lead text-deep my-1'>\n                                <i class='fas fa-portrait' />{' '}\n                                {profile.user.name}\n                              </p>\n                              <p className='lead text-deep my-1'>\n                                <i class='fas fa-map-marker-alt'></i>{' '}\n                                {profile.thana}\n                              </p>\n                              <Link\n                                className='btn btn-danger'\n                                to={`/profile/donorId/${profile._id}`}\n                                profile={profile}\n                              >\n                                View Profile\n                              </Link>\n                            </div>\n                          </Fragment>\n                        )}\n                      </Fragment>\n                    ))}\n                    <br />\n                    <br />\n                    <p className='mid text-deep'>\n                      <i class='fas fa-portrait' /> অন্যান্য সবাই\n                    </p>\n                    {profiles.map(profile => (\n                      <Fragment>\n                        {profile.can === 'yes' && profile.thana !== post.thana && (\n                          <Fragment>\n                            <div className='posts bg-white p-1 my-2'>\n                              <p className='lead text-deep my-1'>\n                                <i class='fas fa-portrait' />{' '}\n                                {profile.user.name}\n                              </p>\n                              <p className='lead text-deep my-1'>\n                                <i class='fas fa-map-marker-alt'></i>{' '}\n                                {profile.thana}\n                              </p>\n                              <Link\n                                className='btn btn-danger'\n                                to={`/profile/donorId/${profile._id}`}\n                                profile={profile}\n                              >\n                                View Profile\n                              </Link>\n                            </div>\n                          </Fragment>\n                        )}\n                      </Fragment>\n                    ))}\n                  </Fragment>\n                ) : (\n                  <Fragment>\n                    {needer !== null &&\n                      profile === null &&\n                      profiles.length < 1 && (\n                        <Fragment>\n                          <p className='mid tex-deep'>\n                            <i class='fas fa-frown'></i> বর্তমানে{' '}\n                            {post.bloodGroup} রক্তদাতা কেউ নেই.\n                          </p>\n                          <p className='lead tex-deep'>\n                            <i class='fas fa-praying-hands'></i> অনুগ্রহ করে\n                            পরবর্তীতে আবার চেষ্টা করুন\n                          </p>\n                        </Fragment>\n                      )}\n                  </Fragment>\n                )}\n              </Fragment>\n            ) : (\n              <Fragment>\n                {isAuthenticated && user !== null && needer === null && (\n                  <p className='mid tex-deep'>\n                    Create <Link to='/newApplication'>New Application</Link> to\n                    get Donars\n                  </p>\n                )}\n              </Fragment>\n            )}\n          </Fragment>\n        )}\n      </div>\n    </Fragment>\n  );\n};\n\nDonars.propTypes = {\n  profile: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n  post: PropTypes.object.isRequired,\n  getMyDonars: PropTypes.func.isRequired,\n  getPostById: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  profile: state.profile,\n  auth: state.auth,\n  post: state.post\n});\n\nexport default connect(mapStateToProps, { getMyDonars, getPostById })(Donars);\n","import React, { Fragment, useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { getMyPosts } from '../../actions/post';\nimport Moment from 'react-moment';\nimport PostItem from './PostItem';\nimport Spinner from '../layout/Spinner';\n\nconst MyPost = ({\n  getMyPosts,\n  post: { posts },\n  auth: { isAuthenticated, loading, needer }\n}) => {\n  useEffect(() => {\n    getMyPosts();\n  }, [getMyPosts]);\n\n  return (\n    <Fragment>\n      <div className='container'>\n        {loading ? (\n          <Fragment>\n            <Spinner />\n          </Fragment>\n        ) : (\n          <Fragment>\n            {isAuthenticated &&\n              needer !== null &&\n              loading === false &&\n              posts.length > 0 && (\n                <Fragment>\n                  <h1 className='text-deep'>\n                    <i className='fas fa-user'></i> স্বাগতম {needer.name}\n                  </h1>\n                  <div className='my-3'>\n                    {' '}\n                    <p className='mid text-deep'>\n                      <i class='fas fa-file-medical'></i> আপনার Applications\n                    </p>\n                    <div>\n                      {posts.map(post => (\n                        <div className='badge-white my-3'>\n                          <div>\n                            <p className='mid'>\n                              <i class='fas fa-user-nurse'></i>{' '}\n                              <Link\n                                to={`/donors/postId/${post._id}`}\n                                className='btn btn-primary'\n                              >\n                                {post.bloodGroup} রক্ত দাতা\n                              </Link>\n                            </p>\n                          </div>\n                          <PostItem\n                            key={post._id}\n                            post={post}\n                            showActions={true}\n                          />\n                        </div>\n                      ))}\n                    </div>\n                  </div>\n                </Fragment>\n              )}\n          </Fragment>\n        )}\n      </div>\n    </Fragment>\n  );\n};\n\nMyPost.propTypes = {\n  auth: PropTypes.object.isRequired,\n  getMyPosts: PropTypes.func.isRequired,\n  post: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  post: state.post\n});\n\nexport default connect(mapStateToProps, { getMyPosts })(MyPost);\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n//style={{ color: 'red' }}\nconst DonarAbout = ({\n  profile: {\n    bloodGroup,\n    donateDate,\n    facebook,\n    can,\n    area,\n    thana,\n    user: { name, phone }\n  }\n}) => {\n  return (\n    <Fragment>\n      {' '}\n      <div className='profile-top bg-red p-2'>\n        <div>\n          <p>\n            <span className='large'>\n              <i class='fas fa-user-nurse'></i> {name}\n            </span>\n          </p>\n        </div>\n        <br />\n        <p className='lead'>\n          <span>Blood Group:</span> <span>{bloodGroup}</span>\n        </p>\n        <p className='lead'>\n          <span>Mobile Number:</span> <span>{phone}</span>\n        </p>\n        <p className='lead'>\n          <span>Last Donate Time: </span> <span>{donateDate}</span>\n        </p>\n        <p className='lead'>\n          <span>Available:</span> <span>{can}</span>\n        </p>\n        <p className='lead'>\n          <span>Address:</span> <span>{thana} - </span>\n          <span>{area}</span>\n        </p>\n      </div>\n    </Fragment>\n  );\n};\n\nDonarAbout.propTypes = {\n  profile: PropTypes.object.isRequired\n};\n\nexport default DonarAbout;\n","import React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getDonarById } from '../../actions/profile';\nimport DonarAbout from './DonarAbout';\nimport Spinner from '../layout/Spinner';\n\nconst Donar = ({\n  getDonarById,\n  profile: { profile },\n  auth: { isAuthenticated, needer },\n  match\n}) => {\n  useEffect(() => {\n    getDonarById(match.params.id);\n  }, [getDonarById, match.params.id]);\n\n  return (\n    <Fragment>\n      <div className='container'>\n        {!profile || profile === null ? (\n          <Fragment>\n            <Spinner />\n          </Fragment>\n        ) : (\n          <Fragment>\n            {isAuthenticated &&\n            needer !== null &&\n            profile !== null &&\n            profile._id === match.params.id ? (\n              <Fragment>\n                {' '}\n                <div className='welcome'>\n                  <p className='text-deep mid my-1'>\n                    <i class='fas fa-smile'></i> Hi {needer.name}\n                  </p>\n                  <p className='text-deep mid my-1'>\n                    <i class='fas fa-heart'></i> Welcome to My Profile\n                  </p>\n                  <p className='text-deep lead my-1'>\n                    <i class='fas fa-hand-peace'></i> Please contact with me\n                  </p>\n                </div>\n                <DonarAbout profile={profile} />\n              </Fragment>\n            ) : (\n              <Fragment>\n                <Spinner />\n              </Fragment>\n            )}\n          </Fragment>\n        )}\n      </div>\n    </Fragment>\n  );\n};\n\nDonar.propTypes = {\n  getDonarById: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  profile: state.profile\n});\n\nexport default connect(mapStateToProps, { getDonarById })(Donar);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst AboutUs = props => {\n  return (\n    <div className='container badge-white'>\n      <h1 className='text-red large'>About Blood Source</h1>\n      <br />\n      <p>\n        Blood Source একটি দৃঢ় ও সংকল্পবদ্ধ সংঘ বাংলাদেশের মানুষের জন্য। এই সংঘ\n        মানুষের রক্তের প্রয়োজনে এগিয়ে আসে। এই সংঘে আছে আগ্রহী ও আত্মবিশ্বাসী\n        মানুষের দল যারা মানুষের প্রয়োজনে রক্ত প্রদান করে থাকে এবং তাদের জীবনে\n        বেঁচে থাকার জন্য এক মুখ্য ভূমিকা পালন করে থাকে। আমাদের এই সৎ ইচ্ছার দরুন\n        সেই সব মানুষরা উৎসাহী হবে যারা কিনা মানব কল্যাণের জন্য সর্বদা নিবেদিত।\n        আপনার মত মানুষ যারা এই মহৎ কাজে অংশ নিতে চায় তাদেরকে এই গ্রুপে আমন্ত্রণ\n        করা আমাদের জন্য আনন্দ, সম্মান ও সৌভাগ্যের বিষয়। প্রতিদিন এই গ্রুপে বসে\n        ভাল কাজের মেলা। যেকোনো শ্রেণির মানুষই আমাদের এই গ্রুপের অপরিহার্য অংশ।\n        আমাদের উদ্দেশ্য হল সকল মহৎ যোধ্যাদের একই রাজ্যে আনা যেখানে প্রত্যেকে\n        রক্তদানে ভূমিকা রাখতে পারে। একটি স্লোগান আছে যে, \"একবিন্দু রক্ত তিনজন\n        মানুষের জীবন বাঁচায়, কিন্তু একটি সুন্দর আচরণ লক্ষ লক্ষ লোকের মুখে হাঁসি\n        ফুটিয়ে তুলে\"। শুভ হোক সবার রক্তদানের প্রচেষ্টা 🙂\n        <br />\n        <br />\n        Blood Source is a resolute community, in Bangladesh, to donate their\n        blood to the people who are in need of it. This is a platform for an\n        enthusiastic group of people who wishes to serve others by taking a key\n        role in saving their lives. Consequently, this initiative will elevate\n        inspiration to the people who always wanted to contribute to the\n        betterment of human beings. This is our honour and privilege to welcome\n        everyone who wishes to join our community where great things happen\n        every day. People of a diverse background are an essential part of this\n        community. The objective resides the intention to bring all the good\n        souls in a single realm where each individual can take part in donating\n        blood.\n        <br />\n        Just remember, \"A single pint can save three lives, a single gesture can\n        create a million smiles\".\n        <br />\n        Happy \"blood-donation\" to all 🙂{' '}\n      </p>\n    </div>\n  );\n};\n\nAboutUs.propTypes = {};\n\nexport default AboutUs;\n","import React, { Fragment, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport Spinner from './Spinner';\nimport { getPostsByBlood } from '../../actions/post';\nimport { getMyProfile } from '../../actions/profile';\nimport PostItem from '../post/PostItem';\n\nconst DonorDashBoard = ({\n  post: { posts },\n  auth: { isAuthenticated, loading, user },\n  profile: { profile },\n  getPostsByBlood,\n  getMyProfile\n}) => {\n  useEffect(() => {\n    getMyProfile();\n    getPostsByBlood();\n  }, [getMyProfile, getPostsByBlood]);\n\n  return (\n    <Fragment>\n      <div className='container'>\n        {loading ? (\n          <Fragment>\n            <Spinner />\n          </Fragment>\n        ) : (\n          <Fragment>\n            {isAuthenticated &&\n              loading === false &&\n              user !== null &&\n              posts !== null &&\n              profile !== null && (\n                <Fragment>\n                  <h1 className='text-deep'>\n                    <i className='fas fa-user'></i> {user.name}'s Dashboard\n                  </h1>\n                  <div className='my-3'>\n                    {' '}\n                    <p className='mid text-deep'>\n                      <i class='fas fa-file-medical'></i> {user.bloodGroup}{' '}\n                      Applications\n                    </p>\n                    <p className='mid text-deep'>\n                      <i class='fas fa-map-marker-alt'></i> Near you\n                    </p>\n                    <Fragment>\n                      {' '}\n                      {posts.map(post => (\n                        <Fragment>\n                          {post.thana === profile.thana &&\n                            post.bloodGroup === profile.bloodGroup && (\n                              <div>\n                                <PostItem\n                                  key={post._id}\n                                  post={post}\n                                  showActions={true}\n                                />\n                              </div>\n                            )}\n                        </Fragment>\n                      ))}\n                    </Fragment>\n                  </div>\n                </Fragment>\n              )}\n          </Fragment>\n        )}\n      </div>\n    </Fragment>\n  );\n};\n\nDonorDashBoard.propTypes = {\n  auth: PropTypes.object.isRequired,\n  post: PropTypes.object.isRequired,\n  getMyProfile: PropTypes.func.isRequired,\n  getPostsByBlood: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  post: state.post,\n  profile: state.profile\n});\n\nexport default connect(mapStateToProps, { getPostsByBlood, getMyProfile })(\n  DonorDashBoard\n);\n","import React, { Fragment, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { addApplication } from '../../actions/post';\n\nconst AddApplication = ({\n  addApplication,\n  history,\n  auth: { isAuthenticated, needer }\n}) => {\n  const [formData, setFormData] = useState({\n    text: '',\n    bloodGroup: '',\n    area: '',\n    thana: '',\n    clinicName: ''\n  });\n\n  const { text, bloodGroup, area, thana, clinicName } = formData;\n\n  const onChange = e =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const onSubmit = e => {\n    e.preventDefault();\n    addApplication(formData, history);\n  };\n\n  return (\n    <Fragment>\n      {isAuthenticated && needer !== null && (\n        <Fragment>\n          <div className='container post-form'>\n            <div\n              className='welcome text-deep my-1'\n              style={{ marginTop: '0.5em' }}\n            >\n              <p className='mid'>\n                <i className='fas fa-user'></i> স্বাগতম {needer.name}\n              </p>\n              <p className='lead my-1'>\n                <i class='fas fa-heart'></i> আমরা আপনার সেবায় নিয়জিত\n              </p>\n              <p className='lead my-1'>\n                <i class='fas fa-smile'></i> নতুন আবেদন\n              </p>\n            </div>\n            <form className='form my-1' onSubmit={e => onSubmit(e)}>\n              <textarea\n                name='text'\n                cols='30'\n                rows='4'\n                placeholder='* আপনার রক্তের কেনো প্রয়োজন?'\n                value={text}\n                onChange={e => onChange(e)}\n                required\n              />\n              <div className='form-group'>\n                <select\n                  name='bloodGroup'\n                  value={bloodGroup}\n                  onChange={e => onChange(e)}\n                >\n                  <option value='0'>* রক্তের গ্রুপ নির্বাচন করুন</option>\n                  <option value='A+'>A+</option>\n                  <option value='A-'>A-</option>\n                  <option value='B+'>B+</option>\n                  <option value='B-'>B-</option>\n                  <option value='O+'>O+</option>\n                  <option value='O-'>O-</option>\n                  <option value='AB+'>AB+</option>\n                  <option value='AB-'>AB-</option>\n                </select>\n                <small className='form-text'>যে রক্তের গ্রুপ আপনার দরকার</small>\n              </div>\n              <div>\n                <h3>Address</h3>\n                <div className='form-group'>\n                  <input\n                    type='text'\n                    placeholder='* হাসপাতালের/ক্লিনিক এর নাম'\n                    name='clinicName'\n                    value={clinicName}\n                    onChange={e => onChange(e)}\n                  />\n                  <small className='form-text'>\n                    রোগী যেই হাসপাতালে ভর্তি আছে\n                  </small>\n                </div>\n                <div className='form-group'>\n                  <input\n                    type='text'\n                    placeholder='* হাসপাতালের ঠিকানা'\n                    name='area'\n                    value={area}\n                    onChange={e => onChange(e)}\n                  />\n                  <small className='form-text'>\n                    যেমনঃ বাড়ি-১০, রোড-১২, ব্লক-৮ ইত্যাদি\n                  </small>\n                </div>\n                <div className='form-group'>\n                  <select\n                    name='thana'\n                    value={thana}\n                    onChange={e => onChange(e)}\n                  >\n                    <option value='0'>* থানা</option>\n                    <option value='Adabar'>Adabar</option>\n                    <option value='Azampur'>Azampur</option>\n                    <option value='Badda'>Badda</option>\n                    <option value='Bangsal'>Bangsal</option>\n                    <option value='Bimanbandar'>Bimanbandar</option>\n                    <option value='Cantonment'>Cantonment</option>\n                    <option value='Chowkbazar'>Chowkbazar</option>\n                    <option value='Darus Salam'>Darus Salam</option>\n                    <option value='Demra'>Demra</option>\n                    <option value='Dhanmondi'>Dhanmondi</option>\n                    <option value='Gendaria'>Gendaria</option>\n                    <option value='Gulshan'>Gulshan</option>\n                    <option value='Hazaribagh'>Hazaribagh</option>\n                    <option value='Kadamtali'>Kadamtali</option>\n                    <option value='Kafrul'>Kafrul</option>\n                    <option value='Kalabagan'>Kalabagan</option>\n                    <option value='Kamrangirchar'>Kamrangirchar</option>\n                    <option value='Khilgaon'>Khilgaon</option>\n                    <option value='Khilkhet'>Khilkhet</option>\n                    <option value='Kotwali'>Kotwali</option>\n                    <option value='Lalbagh'>Lalbagh</option>\n                    <option value='Mirpur Model'>Mirpur Model</option>\n                    <option value='Mohammadpur'>Mohammadpur</option>\n                    <option value='Motijheel'>Motijheel</option>\n                    <option value='New Market'>New Market</option>\n                    <option value='Pallabi'>Pallabi</option>\n                    <option value='Paltan'>Paltan</option>\n                    <option value='Panthapath'>Panthapath</option>\n                    <option value='Ramna'>Ramna</option>\n                    <option value='Rampura'>Rampura</option>\n                    <option value='Sabujbagh'>Sabujbagh</option>\n                    <option value='Shah Ali'>Shah Ali</option>\n                    <option value='Shahbag'>Shahbag</option>\n                    <option value='Sher-e-Bangla Nagar'>\n                      Sher-e-Bangla Nagar\n                    </option>\n                    <option value='Shyampur'>Shyampur</option>\n                    <option value='Sutrapur'>Sutrapur</option>\n                    <option value='Tejgaon Industrial Area'>\n                      Tejgaon Industrial Area\n                    </option>\n                    <option value='Tejgaon'>Tejgaon</option>\n                    <option value='Turag'>Turag</option>\n                    <option value='Uttar Khan'>Uttar Khan</option>\n                    <option value='Uttara'>Uttara</option>\n                    <option value='Vatara'>Vatara</option>\n                    <option value='Wari'>Wari</option>\n                  </select>\n                  <small className='form-text'>সঠিক থানা বাছুন</small>\n                </div>\n              </div>\n              <input\n                type='submit'\n                className='btn btn-dark my-1'\n                value='Submit'\n              />\n            </form>\n          </div>\n        </Fragment>\n      )}\n    </Fragment>\n  );\n};\n\nAddApplication.propTypes = {\n  auth: PropTypes.object.isRequired,\n  addApplication: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, { addApplication })(AddApplication);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst NoApplication = props => {\n  return (\n    <div className='container badge-light'>\n      <p className='mid text-deep'>Blood Source এ আপনাকে স্বাগতম।</p> <br />\n      <br />\n      <p className='lead text-deep'>\n        এই মুহূর্তে আমরা রক্ত দাতা (Donor) সংগ্রহ করতে নিয়োজিত আপনাদের জন্যে।\n        আমরা চাই একজন মানুষও যেন আমাদের সহযোগিতা থেকে বঞ্চিত না হয়, তাই আমাদের\n        এই বিড়ম্বনা। <br />\n        <br />\n        আমরা দুঃখিত বর্তমানে আপনাকে সহযোগিতা করতে না পেরে। <br />\n        শুভ হক আপনার রক্ত সংগ্রহ।{' '}\n      </p>\n    </div>\n  );\n};\n\nNoApplication.propTypes = {};\n\nexport default NoApplication;\n","import React, { Fragment, useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport './App.css';\n\nimport Navbar from './components/layout/Navbar';\nimport Landing from './components/layout/Landing';\nimport Register from './components/auth/Register';\nimport Login from './components/auth/Login';\nimport Needer from './components/auth/Needer';\nimport Alert from './components/layout/Alert';\nimport Home from './components/layout/Home';\nimport Footer from './components/layout/Footer';\n\nimport HowToDonate from './components/Information/HowToDonate';\nimport HowToGet from './components/Information/HowToGet';\nimport Terms from './components/Information/TermsAndConditions';\n\nimport PrivateRoute from './components/routing/PrivateRoute';\nimport store from './store';\nimport { loadUser } from './actions/auth';\nimport { loadNeeder } from './actions/auth';\nimport setAuthToken from './utils/setAuthToken';\nimport CreateProfile from './components/create-profile/CreateProfile';\nimport Profile from './components/profile/Profile';\nimport MyProfile from './components/profile/MyProfile';\nimport EditProfile from './components/create-profile/EditProfile';\nimport Admin from './components/admin/Admin';\nimport Customers from './components/admin/customer/Customers';\nimport Customer from './components/admin/customer/Customer';\nimport Users from './components/admin/user/Users';\nimport User from './components/admin/user/User';\nimport AddPost from './components/post/AddPost';\nimport Post from './components/post/Post';\nimport Posts from './components/post/Posts';\nimport Donars from './components/donar/Donars';\nimport MyPost from './components/post/MyPost';\nimport Donar from './components/donar/Donar';\nimport AboutUs from './components/Information/AboutUs';\nimport DonorDashBoard from './components/layout/DonorDashBoard';\nimport AddApplication from './components/post/AddApplication';\nimport NoApplication from './components/post/NoApplication';\n\nif (localStorage.token) {\n  setAuthToken(localStorage.token);\n}\n\nconst App = () => {\n  useEffect(() => {\n    store.dispatch(loadUser());\n    store.dispatch(loadNeeder());\n  }, []);\n\n  return (\n    <Provider store={store}>\n      <Router>\n        <Fragment>\n          <Navbar />\n          <Alert />\n          <Route exact path='/' component={Home} />\n          <section className=''>\n            <Switch>\n              <Route exact path='/about' component={AboutUs} />\n              <Route exact path='/howtodonate' component={HowToDonate} />\n              <Route exact path='/howtoget' component={HowToGet} />\n              <Route exact path='/termsandconditions' component={Terms} />\n              <Route exact path='/newApplication' component={NoApplication} />\n              <Route exact path='/posts/postId/:id' component={Post} />\n              <Route exact path='/posts' component={Posts} />\n              <Route exact path='/register' component={Register} />\n              <Route exact path='/login' component={Login} />\n              <Route exact path='/needer' component={Needer} />\n              <PrivateRoute\n                exact\n                path='/addApplication'\n                component={AddApplication}\n              />\n              <PrivateRoute exact path='/admin' component={Admin} />\n              <PrivateRoute exact path='/customers' component={Customers} />\n              <PrivateRoute exact path='/customer/:id' component={Customer} />\n              <PrivateRoute exact path='/users' component={Users} />\n              <PrivateRoute exact path='/user/:id' component={User} />\n              <PrivateRoute\n                exact\n                path='/donors/postId/:id'\n                component={Donars}\n              />\n              <PrivateRoute\n                exact\n                path='/create-profile'\n                component={CreateProfile}\n              />\n              <PrivateRoute\n                exact\n                path='/edit-profile'\n                component={EditProfile}\n              />\n              <PrivateRoute exact path='/profile/me' component={MyProfile} />\n              <PrivateRoute\n                exact\n                path='/myDashBoard'\n                component={DonorDashBoard}\n              />\n              <PrivateRoute\n                exact\n                path='/profile/profileId/:id'\n                component={Profile}\n              />\n              <PrivateRoute\n                exact\n                path='/profile/donorId/:id'\n                component={Donar}\n              />\n              <PrivateRoute exact path='/posts/myPost' component={MyPost} />\n            </Switch>\n          </section>\n        </Fragment>\n      </Router>\n    </Provider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}